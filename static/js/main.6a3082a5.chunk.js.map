{"version":3,"sources":["utils/graphExamples.ts","components/GraphMenu.tsx","components/generic/PopoverIconMenu.tsx","components/ImportExportMenu.tsx","img/logo.svg","components/InfoMenu.tsx","components/Header.tsx","components/Toolbar.tsx","utils/color.ts","utils/matrix.ts","utils/evaluateExpr.ts","hooks/useExprs.tsx","utils/draw.ts","hooks/useDraggablePosition.tsx","components/Graph.tsx","components/Sidebar.tsx","components/MathInput.tsx","components/ExprMenu.tsx","components/Slider.tsx","components/Expr.tsx","components/ExprList.tsx","components/NewExpression.tsx","components/TexButton.tsx","components/Keypad.tsx","components/GraphControls.tsx","components/App.tsx","hooks/useWindowSize.tsx","index.tsx"],"names":["graphExamples","code","thumbnail","tooltip","GraphMenu","importGraph","React","useState","open","setOpen","onGraphSelect","examples","map","absoluteThumb","ListItemButton","className","onClick","Avatar","src","variant","ListItemText","IconButton","Menu","htmlColor","Drawer","anchor","onClose","List","subheader","ListSubheader","PopoverIconMenu","children","icon","closeOnClick","anchorEl","setAnchorEl","onMenuClose","event","currentTarget","Popover","marginThreshold","anchorOrigin","vertical","horizontal","keepMounted","Boolean","undefined","ImportExportMenu","exportExprs","exportGraphPNG","importExprs","isExport","setIsExport","importCode","setImportCode","importSuccess","setImportSuccess","importAttempted","setImportAttempted","copySuccess","setCopySuccess","str","ImportExport","exprsBase64","copyAlert","Alert","severity","exportMenu","TextField","value","size","inputProps","readOnly","Button","navigator","clipboard","writeText","startIcon","ContentCopy","PhotoLibrary","importAlert","importMenu","onChange","SaveAlt","err","ToggleButtonGroup","exclusive","ToggleButton","_g","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLogo","_ref","svgRef","title","titleId","props","viewBox","xmlns","ref","id","strokeLinecap","fillRule","fontSize","stroke","strokeWidth","fill","transform","d","vectorEffect","ForwardRef","InfoMenu","Info","Stack","direction","alignItems","gap","GitHub","Link","href","Header","Toolbar","newExpr","hideSidebar","newItemButtons","Calculate","text","action","FormatQuote","MenuItem","ListItemIcon","Add","DoubleArrow","toHex","n","x","Math","round","toString","shadeColor","color","light","r","parseInt","substr","g","b","randomColor","h","s","v","floor","f","p","q","t","HSVtoRGB","random","isVector","mat","dimensions","fixRoundingError","val","type","math","Number","EPSILON","evaluationListToTex","evaluations","evaluation","evaluationToTex","join","lastFn","toArray","columns","precision","evaluationToJson","toTex","lastFunctionNode","root","items","result","AnimationState","defaultAnalysis","evaluatedTex","evaluatedValue","lastArgs","isAssignment","analyzeExpr","texStr","scope","originalScope","evaluated","parseTex","e","evaluate","evaluateExpr","analysis","isAssignmentNode","lastFnNode","fn","name","args","arg","roundedEval","defaultExprData","tex","texToInsert","animationState","Paused","sliderMin","sliderMax","sliderStep","visible","animationDuration","showMinor","showCoords","useExprs","exprID","useRef","current","exprs","setExprs","focusedID","setFocusedID","getExpr","find","expr","updateExpr","modifications","prevList","originalIdx","findIndex","exprData","original","modifiedExpr","newList","onExprInput","thisExpr","evaluateOnce","exprsToEvaluate","evaluatedExprs","forEach","idx","prevExprs","firstExprs","evaluateExprs","onExprFocus","onExprOptionChange","option","onExprSliderOptionChange","onExprDelete","prev","filter","onExprAnimate","Requesting","loadExprs","exprImport","max","reorderExprs","idx1","idx2","splice","swapped","newItem","insertTex","animateExpr","drawFrame","start","Running","window","requestAnimationFrame","stepFrame","time","elapsed","generateCallbacks","input","focus","delete","animate","optionChange","sliderOptionChange","pxPerUnit","step","stepPx","boundingBox","canvas","ctx","getTransform","xOrigin","yOrigin","bb","top","bottom","height","left","right","width","values","abs","clear","clearRect","drawLine","x0","y0","x1","y1","save","strokeStyle","beginPath","moveTo","lineTo","closePath","restore","drawTextWithBG","txt","y","options","bgcolor","textBaseline","fillStyle","metric","measureText","padding","w","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","fillRect","fillText","drawGraph","stepValue","pxPerUnscaledStep","coordOffset","subSteps","mod","equal","done","pxPerSubStep","maxSteps","maxCoord","axisColor","mainColor","minorColor","drawHorizontal","v0","valueOf","v1","drawVertical","drawText","j","px","coord","lowerExp","upperExp","font","textAlign","drawExpressions","zoomFactor","drawVector","vx0","vy0","vx1","vy1","unitPx","dx","dy","sqrt","headlen","angle","atan2","squish","rightCorner","cos","PI","sin","leftCorner","lineWidth","drawMatrix","matrixFrame","initial","final","duration","draw","diff","dt","pow","drawEigenvectors","eigenvectors","get","v2","vector","numVectors","component","drawDeterminant","matrix","detCorners","globalAlpha","drawOptions","drawAnimation","drawStatic","jsValue","nCols","vectors","push","normalized","matrixFromColumns","normalizeMatrix","every","dim","isMatrix","useDraggablePosition","initialPos","minimum","Infinity","maximum","position","setPosition","isDragging","startPos","onDragMove","clientX","clientY","oldPos","min","onDragEnd","removeEventListener","onDragStart","addEventListener","isMagnitude","wrapNum","Graph","forwardRef","forwardedRef","canvasRef","ctxRef","canvasInitialized","setCanvasInitialized","minStepPx","setStep","setStepPx","origin","setOrigin","useImperativeHandle","compositeOperation","globalCompositeOperation","setBackground","url","toDataURL","link","document","createElement","download","click","centerGraph","onCanvasInitialized","useCallback","getContext","useLayoutEffect","setTransform","setCanvasOrigin","onMouseDown","onWheel","scroll","deltaY","zoomingIn","nextStepPx","nextStep","factor","maxStepPx","ev","rect","getBoundingClientRect","canvasMousePos","mouseX","mouseY","deltaUnitPx","old","Sidebar","header","setWidth","onResizerClick","showSidebarButton","style","role","MQ","MathInput","latex","latexToInsert","onFocus","mathInput","useEffect","MathField","handlers","edit","mathField","write","ExprMenu","colorOption","materialColor","hex","visibleOption","FormControlLabel","control","Checkbox","checked","label","showMinorOption","showCoordsOption","Slider","focused","variable","onOptionChange","staticMath","oldValue","onOptionInputChange","StaticMath","numberInputProps","sliderJSX","defaultValue","newValue","valueLabelDisplay","Expr","dragHandleProps","callbacks","hasCursor","setHasCursor","isSlider","getAssignmentVar","split","exprSlider","exprEvaluated","isComment","isEigenvectors","isDeterminant","isAnimatable","isDrawable","baseMenuOptions","matrixMenuOptions","showMatrixOptions","settingsIconColor","exprTab","Settings","SlowMotionVideo","exprInput","InputBase","multiline","onBlur","contains","relatedTarget","Clear","ExprList","exprComponents","idStr","draggableId","index","provided","innerRef","draggableProps","destination","droppableId","droppableProps","placeholder","NewExpression","tabIndex","onKeyDown","AddOutlined","TexButton","button","matrixTex","rows","cols","row","repeat","Array","Keypad","keypadVisible","setKeypadVisible","toggleKeypad","toggleKeypadButton","backgroundColor","KeyboardHide","Keyboard","matrixButtons","matrixFunctionButtons","functionButtons","classes","paper","GraphControls","Home","App","windowSize","innerWidth","innerHeight","setSize","onResize","useWindowSize","createRef","sidebarPosition","setSidebarPosition","onSidebarDragStart","config","autoCommands","autoOperatorNames","sidebarHeight","drawableExprs","setSidebarWidth","sidebarHidden","exprsWithoutEval","btoa","JSON","stringify","exprsObject","parse","atob","theme","createTheme","palette","primary","main","ReactDOM","render","StrictMode","ThemeProvider","getElementById"],"mappings":"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","file":"static/js/main.6a3082a5.chunk.js","sourcesContent":["const graphExamples = [\n  {\n    code: 'W3siaWQiOjAsInRleCI6InU9XFxiZWdpbntibWF0cml4fTFcXFxcMlxcZW5ke2JtYXRyaXh9IiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiXFxiZWdpbntibWF0cml4fTFcXFxcMlxcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJWZWN0b3IiLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6dHJ1ZSwiY29sb3IiOiIjY2M1MTE0IiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MSwidGV4Ijoidj1cXGJlZ2lue2JtYXRyaXh9M1xcXFw0XFxlbmR7Ym1hdHJpeH0iLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9M1xcXFw0XFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6IlZlY3RvciIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50Ijp0cnVlLCJjb2xvciI6IiMxNGNjMWUiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjoyLCJ0ZXgiOiJ1K3YiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9NFxcXFw2XFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6IlZlY3RvciIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50IjpmYWxzZSwiY29sb3IiOiIjMTQyNmNjIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MywidGV4IjoidS12IiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiXFxiZWdpbntibWF0cml4fS0yXFxcXC0yXFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6IlZlY3RvciIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50IjpmYWxzZSwiY29sb3IiOiIjY2MxNDhlIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX1d',\n    thumbnail: 'vector-add.png',\n    tooltip: 'Vectors',\n  },\n  {\n    code: 'W3siaWQiOjYyLCJ0ZXgiOiJUeXBlICd0aW1lcycgdG8gZ2V0IHRoZSBzeW1ib2wgZm9yIHRoZSBjcm9zcyBwcm9kdWN0OiIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IiIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoic3RyaW5nIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjY2NhYjE0IiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6NTgsInRleCI6ImFcXHRpbWVzIGIiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6IiIsImxhc3RGbiI6ImNyb3NzIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjMWUxNGNjIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6NjMsInRleCI6Ik9yLCBqdXN0IHVzZSB0aGUgJ2Nyb3NzJyBmdW5jdGlvbjoiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6InN0cmluZyIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50IjpmYWxzZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiIzE0Y2MzNSIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjU5LCJ0ZXgiOiJcXG9wZXJhdG9ybmFtZXtjcm9zc31cXGxlZnQoYSxcXCBiXFxyaWdodCkiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6IiIsImxhc3RGbiI6ImNyb3NzIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjMTRjYzViIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6NjQsInRleCI6IkJlY2F1c2Ugd2UgY2FuJ3QgZ3JhcGggM0QgdmVjdG9ycyBpbiAyRCBzcGFjZSwgb25seSB0aGUgcmVzdWx0IGlzIHNob3duLiIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IiIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoic3RyaW5nIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjY2MxNDJlIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6NjAsInRleCI6ImE9XFxiZWdpbntibWF0cml4fTFcXFxcMlxcXFwzXFxlbmR7Ym1hdHJpeH0iLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9MVxcXFwyXFxcXDNcXGVuZHtibWF0cml4fSIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoiVmVjdG9yIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOnRydWUsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiMxNGM2Y2MiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo2MSwidGV4IjoiYj1cXGJlZ2lue2JtYXRyaXh9NFxcXFw1XFxcXDZcXGVuZHtibWF0cml4fSIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IlxcYmVnaW57Ym1hdHJpeH00XFxcXDVcXFxcNlxcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJWZWN0b3IiLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6dHJ1ZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiIzlkY2MxNCIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9XQ==',\n    thumbnail: 'cross-products.png',\n    tooltip: 'Cross Products',\n  },\n  {\n    code: 'W3siaWQiOjMxLCJ0ZXgiOiJBIGxpbmUgY2FuIGJlIGV4cHJlc3NlZCBhcyB0aGUgZm9sbG93aW5nLCB3aGVyZSAncCcgaXMgYSB2ZWN0b3IgcG9pbnRpbmcgdG8gYSBwb2ludCBvbiB0aGUgbGluZSwgYW5kICdkJyBpcyBhIHZlY3RvciBkZXNjcmliaW5nIHRoZSBkaXJlY3Rpb24gb2YgdGhlIGxpbmU6IiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiIiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJzdHJpbmciLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6ZmFsc2UsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiNjODE0Y2MiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjoyOSwidGV4IjoieD1wK3RkIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiXFxiZWdpbntibWF0cml4fS0xXFxcXDRcXGVuZHtibWF0cml4fSIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoiVmVjdG9yIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOnRydWUsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiMxZWNjMTQiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjoyNiwidGV4IjoicD1cXGJlZ2lue2JtYXRyaXh9MlxcXFwxXFxlbmR7Ym1hdHJpeH0iLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9MlxcXFwxXFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6IlZlY3RvciIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50Ijp0cnVlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjMTQ0YmNjIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MjgsInRleCI6ImQ9XFxiZWdpbntibWF0cml4fTFcXFxcLTFcXGVuZHtibWF0cml4fSIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IlxcYmVnaW57Ym1hdHJpeH0xXFxcXC0xXFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6IlZlY3RvciIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50Ijp0cnVlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjY2MxNGEzIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MzAsInRleCI6InQ9LTMiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiItMyIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoibnVtYmVyIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOnRydWUsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjowLjAwMDAxLCJjb2xvciI6IiM3NTE0Y2MiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjozMiwidGV4IjoiTm90aWNlIHRoYXQgYXMgJ3QnIHZhcmllcywgdGhlIHRpcCBvZiB0aGUgZ3JlZW4gdmVjdG9yICd4JyB0cmFjZXMgb3V0IGEgbGluZSBwYXJhbGxlbCB0byB0aGUgZGlyZWN0aW9uIHZlY3RvciAnZCcuIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiIiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJzdHJpbmciLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6ZmFsc2UsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiM0MDE0Y2MiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfV0=',\n    thumbnail: 'vector-line.png',\n    tooltip: 'Vector Equation of a Line',\n  },\n  {\n    code: 'W3siaWQiOjE4LCJ0ZXgiOiJhPTEiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIxIiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJudW1iZXIiLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6dHJ1ZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiI2NjMTQ5MSIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjIwLCJ0ZXgiOiJiPTMiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIzIiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJudW1iZXIiLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6dHJ1ZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiIzE4MTRjYyIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjEsInRleCI6InU9XFxiZWdpbntibWF0cml4fWFcXFxcYlxcZW5ke2JtYXRyaXh9IiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiXFxiZWdpbntibWF0cml4fTFcXFxcM1xcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJWZWN0b3IiLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6dHJ1ZSwiY29sb3IiOiIjMTRjYzFlIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MCwidGV4Ijoidj1cXGJlZ2lue2JtYXRyaXh9M1xcXFw0XFxlbmR7Ym1hdHJpeH0iLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9M1xcXFw0XFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6IlZlY3RvciIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50Ijp0cnVlLCJjb2xvciI6IiNjYzUxMTQiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjoyMiwidGV4IjoiVGhlIHByb2plY3Rpb24gb2YgJ3UnIG9udG8gJ3YnOiIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IiIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoic3RyaW5nIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjMTQ2YmNjIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MiwidGV4IjoiXFxvcGVyYXRvcm5hbWV7cHJvan1cXGxlZnQodixcXCB1XFxyaWdodCkiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9MS44XFxcXDIuNFxcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJWZWN0b3IiLCJsYXN0Rm4iOiJwcm9qIiwibGFzdEFyZ3MiOlt7Im1hdGhqcyI6IkRlbnNlTWF0cml4IiwiZGF0YSI6WzMsNF0sInNpemUiOlsyXX0seyJtYXRoanMiOiJEZW5zZU1hdHJpeCIsImRhdGEiOlsxLDNdLCJzaXplIjpbMl19XSwiaXNBc3NpZ25tZW50IjpmYWxzZSwiY29sb3IiOiIjMTQyNmNjIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MjQsInRleCI6IlRoZSBjb21wb25lbnQgb2YgJ3UnIGFsb25nICd2JzoiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6InN0cmluZyIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50IjpmYWxzZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiIzE0MjJjYyIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjI1LCJ0ZXgiOiJcXG9wZXJhdG9ybmFtZXtjb21wfVxcbGVmdCh2LFxcIHVcXHJpZ2h0KSIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IjMiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6Im51bWJlciIsImxhc3RGbiI6ImNvbXAiLCJsYXN0QXJncyI6W3sibWF0aGpzIjoiRGVuc2VNYXRyaXgiLCJkYXRhIjpbMyw0XSwic2l6ZSI6WzJdfSx7Im1hdGhqcyI6IkRlbnNlTWF0cml4IiwiZGF0YSI6WzEsM10sInNpemUiOlsyXX1dLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjY2M1NjE0IiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX1d',\n    thumbnail: 'projections-and-components.png',\n    tooltip: 'Projections and Components',\n  },\n  {\n    code: 'W3siaWQiOjU1LCJ0ZXgiOiJBbiBuIHggbiBtYXRyaXggcmVwcmVzZW50cyBhIChsaW5lYXIpIHRyYW5zZm9ybWF0aW9uIGluIG4tZGltZW5zaW9uYWwgc3BhY2UuIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiIiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJzdHJpbmciLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6ZmFsc2UsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiM1NDE0Y2MiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo1MCwidGV4IjoiTT1cXGJlZ2lue2JtYXRyaXh9YSZiXFxcXGMmZFxcZW5ke2JtYXRyaXh9IiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiXFxiZWdpbntibWF0cml4fTEmMVxcXFwwJjFcXGVuZHtibWF0cml4fSIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoiTWF0cml4IiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOnRydWUsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiMxNDVmY2MiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo1NywidGV4IjoiU28sIHdlIGNhbiByZXByZXNlbnQgYSBtYXRyaXggYnkgc2hvd2luZyBob3cgaXQgdHJhbnNmb3JtcyB0aGUgQ2FydGVzaWFuIHBsYW5lICgyRCBzcGFjZSkuIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiIiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJzdHJpbmciLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6ZmFsc2UsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiM5NmNjMTQiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo1MSwidGV4IjoiYT0xIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiMSIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoibnVtYmVyIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOnRydWUsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiNjYzI2MTQiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo1MiwidGV4IjoiYj0xIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiMSIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoibnVtYmVyIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOnRydWUsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiMxNGNjOTgiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo1MywidGV4IjoiYz0wIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiMCIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoibnVtYmVyIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOnRydWUsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiNjYzE0MTkiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo1NCwidGV4IjoiZD0xIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiMSIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoibnVtYmVyIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOnRydWUsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiMxN2NjMTQiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo1NiwidGV4IjoiJ2EnIHJlcHJlc2VudHMgaG9yaXpvbnRhbCBzY2FsaW5nLlxuJ2InIHJlcHJlc2VudHMgaG9yaXpvbnRhbCBza2V3aW5nLlxuJ2MnIHJlcHJlc2VudHMgdmVydGljYWwgc2tld2luZy5cbidkJyByZXByZXNlbnRzIHZlcnRpY2FsIHNjYWxpbmcuIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiIiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJzdHJpbmciLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6ZmFsc2UsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiMxZGNjMTQiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfV0=',\n    thumbnail: 'matrix-transformation-1.png',\n    tooltip: 'Matrices as Linear Transformations 1',\n  },\n  {\n    code: 'W3siaWQiOjM5LCJ0ZXgiOiJNdWx0aXBseWluZyBhIG1hdHJpeCBieSBhIHZlY3RvciBtZWFucyB0YWtpbmcgdGhlIHZlY3RvciBhbmQgYXBwbHlpbmcgdG8gaXQgdGhlIHRyYW5zZm9ybWF0aW9uIGRlc2NyaWJlZCBieSB0aGUgbWF0cml4LiIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IiIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoic3RyaW5nIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjNGRjYzE0IiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MzMsInRleCI6Ik09XFxiZWdpbntibWF0cml4fTEmMVxcXFwwJjFcXGVuZHtibWF0cml4fSIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IlxcYmVnaW57Ym1hdHJpeH0xJjFcXFxcMCYxXFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6Ik1hdHJpeCIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50Ijp0cnVlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjMTQ5MGNjIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MzgsInRleCI6InY9XFxiZWdpbntibWF0cml4fTBcXFxcMVxcZW5ke2JtYXRyaXh9IiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiXFxiZWdpbntibWF0cml4fTBcXFxcMVxcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJWZWN0b3IiLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6dHJ1ZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiI2NjMzYxNCIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjQwLCJ0ZXgiOiJ1PU12IiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiXFxiZWdpbntibWF0cml4fTFcXFxcMVxcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJWZWN0b3IiLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6dHJ1ZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiIzU0MTRjYyIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjQ1LCJ0ZXgiOiJUaGUgYmxhY2sgQ2FydGVzaWFuIHBsYW5lIHJlcHJlc2VudHMgYWxsIHZlY3RvcnMgYmVmb3JlIHRoZSB0cmFuc2Zvcm1hdGlvbjsgdGhlIGJsdWUgQ2FydGVzaWFuIHBsYW5lIHJlcHJlc2VudHMgYWxsIHZlY3RvcnMgYWZ0ZXIgdGhlIHRyYW5zZm9ybWF0aW9uLiIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IiIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoic3RyaW5nIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjY2MxNDE1IiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6NDksInRleCI6Ik5vdGljZSB0aGF0IHRoZSBibHVlIHZlY3RvciBwb2ludHMgdG8gKDAsIDEpIGluIHRoZSB0cmFuc2Zvcm1lZCBDYXJ0ZXNpYW4gcGxhbmUsIHNvIGl0IHJlcHJlc2VudHMgdGhlIHRyYW5zZm9ybWF0aW9uIG9mIHRoZSByZWQgKDAsIDEpIHZlY3Rvci4iLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6InN0cmluZyIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50IjpmYWxzZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiIzE0YmRjYyIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9XQ==',\n    thumbnail: 'matrix-transformation-2.png',\n    tooltip: 'Matrices as Linear Transformations 2',\n  },\n  {\n    code: 'W3siaWQiOjEzLCJ0ZXgiOiJWaXN1YWxseSwgdGhlIHRyYW5zcG9zZSBvZiBhIG1hdHJpeCBzd2FwcyB0aGUgaG9yaXpvbnRhbCBza2V3IGFuZCB0aGUgdmVydGljYWwgc2tldy4iLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6InN0cmluZyIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50IjpmYWxzZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiIzgxY2MxNCIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjExLCJ0ZXgiOiJBPVxcYmVnaW57Ym1hdHJpeH0xJjFcXFxcNiY4XFxlbmR7Ym1hdHJpeH0iLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9MSYxXFxcXDYmOFxcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJNYXRyaXgiLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6dHJ1ZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiIzQ3MTRjYyIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjEyLCJ0ZXgiOiJBXlQiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9MSY2XFxcXDEmOFxcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJNYXRyaXgiLCJsYXN0Rm4iOiJ0cmFuc3Bvc2UiLCJsYXN0QXJncyI6W3sibWF0aGpzIjoiRGVuc2VNYXRyaXgiLCJkYXRhIjpbWzEsMV0sWzYsOF1dLCJzaXplIjpbMiwyXX1dLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjY2MxNDE5IiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MTYsInRleCI6IlNvLCBpdCBmb2xsb3dzIHRoYXQgdGhlIHRyYW5zcG9zZSBvZiBhIHRyYW5zcG9zZSBpcyBlcXVhbCB0byB0aGUgb3JpZ2luYWwgbWF0cml4OiAiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6InN0cmluZyIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50IjpmYWxzZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiIzc3Y2MxNCIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjE0LCJ0ZXgiOiJcXGxlZnQoQV5UXFxyaWdodCleVCIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IlxcYmVnaW57Ym1hdHJpeH0xJjFcXFxcNiY4XFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6Ik1hdHJpeCIsImxhc3RGbiI6InRyYW5zcG9zZSIsImxhc3RBcmdzIjpbeyJtYXRoanMiOiJEZW5zZU1hdHJpeCIsImRhdGEiOltbMSw2XSxbMSw4XV0sInNpemUiOlsyLDJdfV0sImlzQXNzaWdubWVudCI6ZmFsc2UsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiNiZDE0Y2MiLCJ2aXNpYmxlIjpmYWxzZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MTcsInRleCI6IkNhbiB5b3UgdGVsbCB3aHkgYSBtYXRyaXggbXVsdGlwbGllZCBieSBpdHMgdHJhbnNwb3NlIGlzIGFsd2F5cyBzeW1tZXRyaWM/IiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiIiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJzdHJpbmciLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6ZmFsc2UsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiNjYzE0NmIiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjoxNSwidGV4IjoiQV5UQSIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IlxcYmVnaW57Ym1hdHJpeH0zNyY0OVxcXFw0OSY2NVxcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJNYXRyaXgiLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6ZmFsc2UsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiNjYzE0YjMiLCJ2aXNpYmxlIjpmYWxzZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX1d',\n    thumbnail: 'transpose.png',\n    tooltip: 'Transpose of a Matrix',\n  },\n  {\n    code: 'W3siaWQiOjMsInRleCI6IlRoZSBpbnZlcnNlIG9mIGEgbWF0cml4IEEgaXMgdGhlIHJldmVyc2Ugb2YgdGhlIGxpbmVhciB0cmFuc2Zvcm1hdGlvbiBBOiIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IiIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoic3RyaW5nIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJjb2xvciI6IiNjYzE0YWIiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo0LCJ0ZXgiOiJBPVxcYmVnaW57Ym1hdHJpeH0xJjJcXFxcMSYzXFxlbmR7Ym1hdHJpeH0iLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9MSYyXFxcXDEmM1xcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJNYXRyaXgiLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6dHJ1ZSwiY29sb3IiOiIjMTRjYzIwIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6NSwidGV4IjoiXFxvcGVyYXRvcm5hbWV7aW52fVxcbGVmdChBXFxyaWdodCkiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9MyYtMlxcXFwtMSYxXFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6Ik1hdHJpeCIsImxhc3RGbiI6ImludiIsImxhc3RBcmdzIjpbW1sxLDJdLFsxLDNdXV0sImlzQXNzaWdubWVudCI6ZmFsc2UsImNvbG9yIjoiI2E5MTRjYyIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjYsInRleCI6IkFwcGx5aW5nIGEgdHJhbnNmb3JtYXRpb24gZm9sbG93ZWQgaW1tZWRpYXRlbHkgYnkgdGhlIHJldmVyc2Ugb2YgdGhlIHRyYW5zZm9ybWF0aW9uIGlzIHRoZSBzYW1lIGFzIGFwcGx5aW5nIG5vIHRyYW5zZm9ybWF0aW9uOiIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IiIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoic3RyaW5nIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJjb2xvciI6IiMxOWNjMTQiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo3LCJ0ZXgiOiJBXFxvcGVyYXRvcm5hbWV7aW52fUEiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9MSYwXFxcXDAmMVxcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJNYXRyaXgiLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6ZmFsc2UsImNvbG9yIjoiIzBCMEIwQiIsInZpc2libGUiOmZhbHNlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo5LCJ0ZXgiOiJBbmQgdGhlIHJldmVyc2Ugb2YgdGhlIHJldmVyc2Ugb2YgYSB0cmFuc2Zvcm1hdGlvbiBpcyB0aGUgdHJhbnNmb3JtYXRpb24gaXRzZWxmOiIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IiIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoic3RyaW5nIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJjb2xvciI6IiMxNGNjYTkiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjoxMCwidGV4IjoiXFxvcGVyYXRvcm5hbWV7aW52fVxcbGVmdChcXG9wZXJhdG9ybmFtZXtpbnZ9QVxccmlnaHQpIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiXFxiZWdpbntibWF0cml4fTEmMlxcXFwxJjNcXGVuZHtibWF0cml4fSIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoiTWF0cml4IiwibGFzdEZuIjoiaW52IiwibGFzdEFyZ3MiOltbWzMsLTJdLFstMSwxXV1dLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJjb2xvciI6IiMxNGNjODMiLCJ2aXNpYmxlIjpmYWxzZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX1d',\n    thumbnail: 'matrix-inverse.png',\n    tooltip: 'Inverse of a Matrix',\n  },\n  {\n    code: 'W3siaWQiOjIsInRleCI6IkEgbWF0cml4IG9mIHRoZSBmb3JtIFIgaXMgYSByb3RhdGlvbiBtYXRyaXg6IHNvLWNhbGxlZCBiZWNhdXNlIHRoZSB0cmFuc2Zvcm1hdGlvbiBpdCBhcHBsaWVzIGlzIGEgY291bnRlcmNsb2Nrd2lzZSByb3RhdGlvbiBvZiAneCcgcmFkaWFucy4iLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6InN0cmluZyIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50IjpmYWxzZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiI2NjMTRhMSIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjAsInRleCI6IlI9XFxiZWdpbntibWF0cml4fVxcY29zIHgmLVxcc2luIHhcXFxcXFxzaW4geCZcXGNvcyB4XFxlbmR7Ym1hdHJpeH0iLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9MC43Mzc1MjQmLTAuNjc1MzIxXFxcXDAuNjc1MzIxJjAuNzM3NTI0XFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6Ik1hdHJpeCIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50Ijp0cnVlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjY2NhOTE0IiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MSwidGV4IjoieD0wLjc0MTQiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIwLjc0MTQiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6Im51bWJlciIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50Ijp0cnVlLCJzbGlkZXJNaW4iOi01LCJzbGlkZXJNYXgiOjUsInNsaWRlclN0ZXAiOjAuMDAwMSwiY29sb3IiOiIjY2MxNDE3IiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX1d',\n    thumbnail: 'rotation-matrix.png',\n    tooltip: 'Rotation Matrices',\n  },\n  {\n    code: 'W3siaWQiOjYsInRleCI6IlRoZSBkZXRlcm1pbmFudCBjYW4gYmUgdGhvdWdodCBvZiBhcyB0aGUgZmFjdG9yIGJ5IHdoaWNoIGEgdHJhbnNmb3JtYXRpb24gbWF0cml4IHNjYWxlcyB0aGUgYXJlYSBvZiBhbnkgcmVnaW9uLiIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IiIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoic3RyaW5nIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjMTRjYzkxIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6NCwidGV4IjoiQT1cXGJlZ2lue2JtYXRyaXh9MyYwXFxcXDAmNFxcZW5ke2JtYXRyaXh9IiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiXFxiZWdpbntibWF0cml4fTMmMFxcXFwwJjRcXGVuZHtibWF0cml4fSIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoiTWF0cml4IiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOnRydWUsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiMxNGNjNjUiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo1LCJ0ZXgiOiJcXGRldCBBIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiMTIiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6Im51bWJlciIsImxhc3RGbiI6ImRldCIsImxhc3RBcmdzIjpbeyJtYXRoanMiOiJEZW5zZU1hdHJpeCIsImRhdGEiOltbMywwXSxbMCw0XV0sInNpemUiOlsyLDJdfV0sImlzQXNzaWdubWVudCI6ZmFsc2UsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiMxNDZkY2MiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjo5LCJ0ZXgiOiJGb3IgZXhhbXBsZSwgdGFrZSB0aGUgcmVnaW9uIGZvcm1lZCBieSB0aGUgdHdvIGJhc2lzIHVuaXQgdmVjdG9ycyAnaScgYW5kICdqJy4gVGhlIGFyZWEgaXMgdGhlIGxlbmd0aCBvZiAnaScgdGltZXMgdGhlIGxlbmd0aCBvZiAnaicsIG9yIDEgeCAxID0gMS5cblxuQWZ0ZXIgdGhlIHRyYW5zZm9ybWF0aW9uLCB0aGUgYmFzaXMgdmVjdG9ycyBhcmUgJ3gnIGFuZCAneScuIFRoZSBhcmVhIGlzIHRoZSBsZW5ndGggb2YgJ3gnIHRpbWVzIHRoZSBsZW5ndGggb2YgJ3knLCBvciAzIHggNCA9IDEyLiIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IiIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoic3RyaW5nIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjNGYxNGNjIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6NywidGV4IjoieD1BXFxiZWdpbntibWF0cml4fTFcXFxcMFxcZW5ke2JtYXRyaXh9IiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiXFxiZWdpbntibWF0cml4fTNcXFxcMFxcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJWZWN0b3IiLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6dHJ1ZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiI2NjOTAxNCIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjgsInRleCI6Ink9QVxcYmVnaW57Ym1hdHJpeH0wXFxcXDFcXGVuZHtibWF0cml4fSIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IlxcYmVnaW57Ym1hdHJpeH0wXFxcXDRcXGVuZHtibWF0cml4fSIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoiVmVjdG9yIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOnRydWUsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiNDQzE0QkEiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfV0=',\n    thumbnail: 'determinant.png',\n    tooltip: 'Determinants',\n  },\n  {\n    code: 'W3siaWQiOjMsInRleCI6IlRoZSBlaWdlbnZlY3RvcnMgb2YgYSBtYXRyaXggcmVwcmVzZW50IHRoZSB2ZWN0b3JzIHdob3NlIGRpcmVjdGlvbiBkb2VzIG5vdCBjaGFuZ2Ugd2hlbiB1bmRlcmdvaW5nIHRoZSBtYXRyaXggdHJhbnNmb3JtYXRpb24uIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiIiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJzdHJpbmciLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6ZmFsc2UsImNvbG9yIjoiIzY1Y2MxNCIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjEsInRleCI6IkE9XFxiZWdpbntibWF0cml4fTEmM1xcXFwzJjVcXGVuZHtibWF0cml4fSIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IlxcYmVnaW57Ym1hdHJpeH0xJjNcXFxcMyY1XFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6Ik1hdHJpeCIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50Ijp0cnVlLCJjb2xvciI6IiMxNDFFQ0MiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjowLCJ0ZXgiOiJcXG9wZXJhdG9ybmFtZXtlaWdlbnZlY3RvcnN9QSIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IlxcYmVnaW57Ym1hdHJpeH0wLjg4MTY3NVxcXFwtMC40NzE4NThcXGVuZHtibWF0cml4fSxcXHNwYWNlXFxiZWdpbntibWF0cml4fTAuNDcxODU4XFxcXDAuODgxNjc1XFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6Ik1hdHJpeCIsImxhc3RGbiI6ImVpZ2VudmVjdG9ycyIsImxhc3RBcmdzIjpbeyJtYXRoanMiOiJEZW5zZU1hdHJpeCIsImRhdGEiOltbMSwzXSxbMyw1XV0sInNpemUiOlsyLDJdfV0sImlzQXNzaWdubWVudCI6ZmFsc2UsImNvbG9yIjoiIzE0Q0MyNCIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjksInRleCI6IlRyeSBwbGF5aW5nIHRoZSBhbmltYXRpb24gb2YgdGhlIG1hdHJpeCB0cmFuc2Zvcm1hdGlvbiAnQScgYWJvdmUuIE5vdGljZSBob3cgdGhlIGVpZ2VudmVjdG9ycyBwb2ludCBpbiB0aGUgZGlyZWN0aW9uIHRoYXQgdGhlIHRyYW5zZm9ybWF0aW9uIHN0cmV0Y2hlcyBvciBzcXVlZXplcyEiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6InN0cmluZyIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50IjpmYWxzZSwiY29sb3IiOiIjMTUxNGNjIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX1d',\n    thumbnail: 'eigenvectors.png',\n    tooltip: 'Eigenvectors',\n  },\n  {\n    code: 'W3siaWQiOjE1LCJ0ZXgiOiJUaGUgZWlnZW52YWx1ZXMgb2YgYSBtYXRyaXggcmVwcmVzZW50IHRoZSBmYWN0b3JzIGJ5IHdoaWNoIHRoZSBlaWdlbnZlY3RvcnMgYXJlIHNjYWxlZCBieSB0aGUgdHJhbnNmb3JtYXRpb24uIiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiIiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJzdHJpbmciLCJsYXN0Rm4iOiIiLCJsYXN0QXJncyI6W10sImlzQXNzaWdubWVudCI6ZmFsc2UsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiMxNGNjYTUiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjoxMiwidGV4IjoiQT1cXGJlZ2lue2JtYXRyaXh9MiYwXFxcXDAmNFxcZW5ke2JtYXRyaXh9IiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiXFxiZWdpbntibWF0cml4fTImMFxcXFwwJjRcXGVuZHtibWF0cml4fSIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoiTWF0cml4IiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOnRydWUsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiMxNDIzY2MiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfSx7ImlkIjoxNCwidGV4IjoiXFxvcGVyYXRvcm5hbWV7ZWlnZW52YWx1ZXN9QSIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IjIsXFxzcGFjZTQiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6IlZlY3RvciIsImxhc3RGbiI6ImVpZ2VudmFsdWVzIiwibGFzdEFyZ3MiOlt7Im1hdGhqcyI6IkRlbnNlTWF0cml4IiwiZGF0YSI6W1syLDBdLFswLDRdXSwic2l6ZSI6WzIsMl19XSwiaXNBc3NpZ25tZW50IjpmYWxzZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiI2NjYzcxNCIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjE3LCJ0ZXgiOiJcXG9wZXJhdG9ybmFtZXtlaWdlbnZlY3RvcnN9QSIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IlxcYmVnaW57Ym1hdHJpeH0xXFxcXDBcXGVuZHtibWF0cml4fSxcXHNwYWNlXFxiZWdpbntibWF0cml4fTBcXFxcMVxcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJNYXRyaXgiLCJsYXN0Rm4iOiJlaWdlbnZlY3RvcnMiLCJsYXN0QXJncyI6W3sibWF0aGpzIjoiRGVuc2VNYXRyaXgiLCJkYXRhIjpbWzIsMF0sWzAsNF1dLCJzaXplIjpbMiwyXX1dLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjRThFOEU4IiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MjEsInRleCI6IlNpbmNlIHRoZSBlaWdlbnZhbHVlcyBhcmUgMiBhbmQgNCwgb2JzZXJ2ZSBob3cgdGhlIGVpZ2VudmVjdG9ycyAoMSwgMCkgYW5kICgwLCAxKSBhcmUgc2NhbGVkIGJ5IGEgZmFjdG9yIG9mIDIgYW5kIDQsIHJlc3BlY3RpdmVseS4iLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6InN0cmluZyIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50IjpmYWxzZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiIzE0Y2M0NiIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjE5LCJ0ZXgiOiJ4PUFcXGJlZ2lue2JtYXRyaXh9MVxcXFwwXFxlbmR7Ym1hdHJpeH0iLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiJcXGJlZ2lue2JtYXRyaXh9MlxcXFwwXFxlbmR7Ym1hdHJpeH0iLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6IlZlY3RvciIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50Ijp0cnVlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjQ0MxNDZBIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6MjAsInRleCI6Ink9QVxcYmVnaW57Ym1hdHJpeH0wXFxcXDFcXGVuZHtibWF0cml4fSIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IlxcYmVnaW57Ym1hdHJpeH0wXFxcXDRcXGVuZHtibWF0cml4fSIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoiVmVjdG9yIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOnRydWUsInNsaWRlck1pbiI6LTEwLCJzbGlkZXJNYXgiOjEwLCJzbGlkZXJTdGVwIjoxLCJjb2xvciI6IiMxNENDMjQiLCJ2aXNpYmxlIjp0cnVlLCJhbmltYXRpb25EdXJhdGlvbiI6MjAwMCwic2hvd01pbm9yIjp0cnVlLCJzaG93Q29vcmRzIjp0cnVlfV0=',\n    thumbnail: 'eigenvalues.png',\n    tooltip: 'Eigenvalues',\n  },\n  {\n    code: 'W3siaWQiOjU5LCJ0ZXgiOiJVc2UgJ1NoaWZ0ICsgRW50ZXInIG9uIGEgdmVjdG9yL21hdHJpeCB0byBhZGQgcm93czoiLCJ0ZXhUb0luc2VydCI6IiIsImFuaW1hdGlvblN0YXRlIjoxLCJldmFsdWF0ZWRUZXgiOiIiLCJldmFsdWF0ZWRWYWx1ZSI6bnVsbCwidHlwZSI6InN0cmluZyIsImxhc3RGbiI6IiIsImxhc3RBcmdzIjpbXSwiaXNBc3NpZ25tZW50IjpmYWxzZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiIzE0Y2M0MSIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjYwLCJ0ZXgiOiJcXG9wZXJhdG9ybmFtZXtub3JtfVxcYmVnaW57Ym1hdHJpeH0xXFxcXDJcXFxcM1xcXFw0XFxcXDVcXGVuZHtibWF0cml4fSIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IjcuNDE2MiIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoibnVtYmVyIiwibGFzdEZuIjoibm9ybSIsImxhc3RBcmdzIjpbeyJtYXRoanMiOiJEZW5zZU1hdHJpeCIsImRhdGEiOlsxLDIsMyw0LDVdLCJzaXplIjpbNV19XSwiaXNBc3NpZ25tZW50IjpmYWxzZSwic2xpZGVyTWluIjotMTAsInNsaWRlck1heCI6MTAsInNsaWRlclN0ZXAiOjEsImNvbG9yIjoiI2EzY2MxNCIsInZpc2libGUiOnRydWUsImFuaW1hdGlvbkR1cmF0aW9uIjoyMDAwLCJzaG93TWlub3IiOnRydWUsInNob3dDb29yZHMiOnRydWV9LHsiaWQiOjYyLCJ0ZXgiOiJVc2UgJ1NoaWZ0ICsgU3BhY2UnIG9uIGEgdmVjdG9yL21hdHJpeCB0byBhZGQgY29sdW1ucyAoTm8gdmlzdWFsaXphdGlvbnMgYXJlIHN1cHBvcnRlZCBwYXN0IDIgZGltZW5zaW9ucyEpOiIsInRleFRvSW5zZXJ0IjoiIiwiYW5pbWF0aW9uU3RhdGUiOjEsImV2YWx1YXRlZFRleCI6IiIsImV2YWx1YXRlZFZhbHVlIjpudWxsLCJ0eXBlIjoic3RyaW5nIiwibGFzdEZuIjoiIiwibGFzdEFyZ3MiOltdLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjMWExNGNjIiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX0seyJpZCI6NjQsInRleCI6Ilxcb3BlcmF0b3JuYW1le2ludn1cXGJlZ2lue2JtYXRyaXh9MSYzJjImNCY2JjcmNSY3JjgmOVxcXFw0JjEmMiY1JjYmNSY2JjUmOCY0XFxcXDMmMiYwJjEmMiYwJjEmNCY1JjZcXFxcOSY4JjcmNCY1JjEmMiYwJjMmNVxcXFwyJjQmMSY3JjgmOSY1JjYmNCYyXFxcXDMmMSYyJjAmMSY1JjQmNyY4JjlcXFxcNSY2JjEmMiYzJjAmMSY0JjUmN1xcXFw4JjcmOCY3JjQmMSYwJjImMyY2XFxcXDUmOCY5JjgmNyY0JjcmNCY3JjRcXFxcMSYyJjMmNiY1JjQmNyY4JjkmN1xcZW5ke2JtYXRyaXh9IiwidGV4VG9JbnNlcnQiOiIiLCJhbmltYXRpb25TdGF0ZSI6MSwiZXZhbHVhdGVkVGV4IjoiXFxiZWdpbntibWF0cml4fS0wLjE4MjAxMiYwLjA2MTQyMzMmLTAuMDM0NzI1JjAuMTM2MzU5JjAuMDY5OTA4MiYwLjA4MzExNjEmLTQuNDI4NTRcXGNkb3QxMF57LTR9JjAuMDAxODczNDUmLTAuMTMzNjY4JjAuMDc5NjYyM1xcXFwwLjAzNjI1MzgmMC4wMzMxMDA3Ji0wLjM4MzAxOSYtMC4xNDM0MTImLTAuMDM5MDQxNCYwLjAxNjAzMzEmMC40MDU2MzgmLTAuMDEzNDY0NiYwLjA5NDYwNDQmLTAuMDkyNDAzNVxcXFwtMC4wMzE4OTMmLTAuMjUyOTE4JjAuNzg4ODM2JjAuMDMyNzk4OCYwLjA4NTU1OTkmMC4wNTIyNjY4Ji0wLjU4ODgzNCYtMC4wMTg5MDY4JjAuMjU5NjgyJi0wLjE0OTAzOVxcXFwwLjA2MTY0NTgmMC4zMDE2NzYmLTAuOTkwNSYtMC4xNTQ1NzcmLTAuMTYwNTc5Ji0wLjA3OTk0MjEmMC41OTIwOTEmMC4yMjQyMDQmLTAuMjY0NDAxJjAuMjIzMjVcXFxcMC4wNDE1MDAzJi0wLjI5MjkyOCYxLjI0NTYxJjAuMjE4OTA1JjAuMTkwNjg4Ji0wLjE1MDkzMiYtMC43ODAyNDQmLTAuMTc2MTE2JjAuMTkwNTg1Ji0wLjE0ODEzMlxcXFwwLjExMjEyNCYwLjE3MTA5NiYtMC40Nzk4MjQmLTAuMTM5MjI0Ji0wLjAzNjM3OTMmMC4wOTI3MDMzJjAuMjUzNDYxJjAuMDg5MjMxNiYtMC4wMjcyMjc4Ji0wLjE1NDM4N1xcXFwtMC4xMTQ4NjQmLTAuMDI3NjEzNCYtMC42MDk4MyYwLjM2MTc3MyYtMC4wMjA0NjY2JjAuMDIzMTg2NSYwLjIxMzc3MiYtMC4xNjQwMjEmLTAuMjk3NDA3JjAuNTAwNTYzXFxcXC0wLjMxNzM5MiYtMC40NDczMyYxLjExNjY1JjAuMDgxMjY0NCYwLjMzODA2JjAuMTE2OTU0Ji0wLjY0NTEzMiYtMC4wOTUxOTIzJjAuMTkzNTg5JjAuMDE3NjY2NVxcXFwwLjE2NTM1NyYwLjM4MzQyNSYtMC4xNjY1NDcmLTAuNDYzMDI3Ji0wLjIxNzY1OCYtMC4wMTYwMTMmMC4zMTg2NTcmMC4xMTM3MDkmMC4yNzk5NTMmLTAuNDUxNTMxXFxcXDAuMTQ3NzU1Ji0wLjAxMTA4MDEmLTAuNDQyNDIzJjAuMjAzODAzJi0wLjA5OTMxOTgmLTAuMDUxNzU3NSYwLjE1NTMyJjAuMDIwOTMwOCYtMC4yOTY5NDgmMC4yODQyMVxcZW5ke2JtYXRyaXh9IiwiZXZhbHVhdGVkVmFsdWUiOm51bGwsInR5cGUiOiJNYXRyaXgiLCJsYXN0Rm4iOiJpbnYiLCJsYXN0QXJncyI6W3sibWF0aGpzIjoiRGVuc2VNYXRyaXgiLCJkYXRhIjpbWzEsMywyLDQsNiw3LDUsNyw4LDldLFs0LDEsMiw1LDYsNSw2LDUsOCw0XSxbMywyLDAsMSwyLDAsMSw0LDUsNl0sWzksOCw3LDQsNSwxLDIsMCwzLDVdLFsyLDQsMSw3LDgsOSw1LDYsNCwyXSxbMywxLDIsMCwxLDUsNCw3LDgsOV0sWzUsNiwxLDIsMywwLDEsNCw1LDddLFs4LDcsOCw3LDQsMSwwLDIsMyw2XSxbNSw4LDksOCw3LDQsNyw0LDcsNF0sWzEsMiwzLDYsNSw0LDcsOCw5LDddXSwic2l6ZSI6WzEwLDEwXX1dLCJpc0Fzc2lnbm1lbnQiOmZhbHNlLCJzbGlkZXJNaW4iOi0xMCwic2xpZGVyTWF4IjoxMCwic2xpZGVyU3RlcCI6MSwiY29sb3IiOiIjMjZjYzE0IiwidmlzaWJsZSI6dHJ1ZSwiYW5pbWF0aW9uRHVyYXRpb24iOjIwMDAsInNob3dNaW5vciI6dHJ1ZSwic2hvd0Nvb3JkcyI6dHJ1ZX1d',\n    thumbnail: 'cross-products.png',\n    tooltip: 'N-dimensional Matrices and Vectors',\n  },\n];\n\nexport default graphExamples;\n","import React from 'react';\nimport {\n  IconButton,\n  Drawer,\n  List,\n  ListSubheader,\n  ListItemButton,\n  ListItemText,\n  Avatar,\n} from '@mui/material';\nimport { Menu } from '@mui/icons-material';\n\nimport 'styles/GraphMenu.css';\nimport 'styles/GraphMenuItem.css';\n\nimport graphExamples from 'utils/graphExamples';\n\nconst imgPath = './assets/graphs';\n\nexport interface GraphMenuProps {\n  importGraph: (base64Exprs: string) => void,\n}\n\nexport default function GraphMenu({ importGraph }: GraphMenuProps) {\n  const [open, setOpen] = React.useState(false);\n\n  const onGraphSelect = (code: string) => () => {\n    importGraph(code);\n    setOpen(false); // close the menu when a graph is selected (and imported)\n  };\n\n  const examples = graphExamples.map(({ code, thumbnail, tooltip }) => {\n    const absoluteThumb = `${imgPath}/${thumbnail}`;\n    return (\n      <ListItemButton className=\"graph-menu-item\" onClick={onGraphSelect(code)}>\n        <Avatar\n          className=\"graph-example-thumbnail\"\n          src={absoluteThumb}\n          variant=\"square\"\n        />\n        <ListItemText>{tooltip}</ListItemText>\n      </ListItemButton>\n    );\n  });\n\n  return (\n    <>\n      <IconButton onClick={() => setOpen(true)}>\n        <Menu htmlColor=\"lightgray\" />\n      </IconButton>\n      <Drawer\n        anchor=\"left\"\n        open={open}\n        onClose={() => setOpen(false)}\n      >\n        <List subheader={<ListSubheader>Examples</ListSubheader>}>\n          {examples}\n        </List>\n      </Drawer>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { IconButton, Popover } from '@mui/material';\n\nexport interface PopoverIconMenuProps {\n  children?: React.ReactNode;\n  closeOnClick?: boolean;\n  icon: React.ReactElement;\n}\n\n/**\n * Component for a popover menu that is opened by an icon button.\n */\nexport default function PopoverIconMenu({\n  children,\n  icon,\n  closeOnClick = false,\n}: PopoverIconMenuProps) {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  function onMenuOpen(event: React.MouseEvent<HTMLButtonElement>) {\n    setAnchorEl(event.currentTarget);\n  }\n\n  function onMenuClose() {\n    setAnchorEl(null);\n  }\n\n  return (\n    <>\n      <IconButton onClick={onMenuOpen}>\n        {icon}\n      </IconButton>\n      <Popover\n        marginThreshold={32} // minimum distance to edge of the window\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClick={closeOnClick ? onMenuClose : undefined}\n        onClose={onMenuClose}\n      >\n        {children}\n      </Popover>\n    </>\n  );\n}\n","import React from 'react';\n\nimport {\n  ImportExport,\n  ContentCopy,\n  SaveAlt,\n  PhotoLibrary,\n} from '@mui/icons-material';\nimport {\n  ToggleButton,\n  ToggleButtonGroup,\n  TextField,\n  Button,\n  Alert,\n} from '@mui/material';\nimport PopoverIconMenu from 'components/generic/PopoverIconMenu';\n\nexport interface ImportExportMenuProps {\n  exportExprs: () => string; // function to get the exprs in serialized base64f ormat\n  exportGraphPNG: () => void; // download the graph as a PNG\n  importExprs: (exprsBase64: string) => void;\n}\n\n/**\n * Button that opens the menu to choose between importing/exporting graph expressions\n */\nexport default function ImportExportMenu({\n  exportExprs,\n  exportGraphPNG,\n  importExprs,\n} : ImportExportMenuProps) {\n  const [isExport, setIsExport] = React.useState(true);\n  const [importCode, setImportCode] = React.useState('');\n  const [importSuccess, setImportSuccess] = React.useState(true);\n  const [importAttempted, setImportAttempted] = React.useState(false);\n  const [copySuccess, setCopySuccess] = React.useState(false);\n\n  function onSelect(event: React.MouseEvent<HTMLElement>, value: any) {\n    setIsExport(value === 'export');\n    setImportAttempted(false);\n    setCopySuccess(false); // reset so the \"copy success\" alert doesn't show all the time\n  }\n\n  function onImport() {\n    setImportAttempted(true);\n    try {\n      importExprs(importCode);\n      setImportSuccess(true);\n    } catch (err) {\n      setImportSuccess(false);\n    }\n  }\n\n  function onImportChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setImportCode(event.currentTarget.value);\n  }\n\n  const icon = <ImportExport htmlColor=\"#ffffff\" />;\n  const exprsBase64 = exportExprs();\n  const copyToClipboard = (str: string) => () => {\n    navigator.clipboard.writeText(str);\n    setCopySuccess(true);\n  };\n\n  const copyAlert = copySuccess && (\n    <Alert severity=\"success\">\n      Copied to clipboard!\n    </Alert>\n  );\n  const exportMenu = (\n    <>\n      <p>Send the following code to another device:</p>\n      <div className=\"import-export-input-group\">\n        <TextField\n          value={exprsBase64}\n          size=\"small\"\n          inputProps={{\n            readOnly: true,\n          }}\n        />\n        <Button\n          onClick={copyToClipboard(exprsBase64)}\n          variant=\"outlined\"\n          startIcon={<ContentCopy />}\n        >\n          Copy\n        </Button>\n      </div>\n      {copyAlert}\n      <p>Or export the graph as a PNG:</p>\n      <Button\n        onClick={exportGraphPNG}\n        variant=\"contained\"\n        startIcon={<PhotoLibrary />}\n      >\n        Export as PNG\n      </Button>\n    </>\n  );\n\n  const importAlert = importSuccess\n    ? (\n      <Alert severity=\"success\">\n        Import succeeded!\n      </Alert>\n    ) : (\n      <Alert severity=\"error\">\n        The given import code is invalid.\n      </Alert>\n    );\n\n  const importMenu = (\n    <>\n      <p>Paste the code from a previous export here:</p>\n      <div className=\"import-export-input-group\">\n        <TextField\n          size=\"small\"\n          onChange={onImportChange}\n          value={importCode}\n        />\n        <Button\n          variant=\"contained\"\n          startIcon={<SaveAlt />}\n          onClick={onImport}\n        >\n          Import\n        </Button>\n      </div>\n      {importAttempted && importAlert}\n    </>\n  );\n\n  return (\n    <PopoverIconMenu\n      icon={icon}\n    >\n      <div className=\"import-export-menu\">\n        <ToggleButtonGroup\n          exclusive\n          onChange={onSelect}\n          value={isExport ? 'export' : 'import'}\n        >\n          <ToggleButton value=\"export\">Export</ToggleButton>\n          <ToggleButton value=\"import\">Import</ToggleButton>\n        </ToggleButtonGroup>\n        {isExport ? exportMenu : importMenu}\n      </div>\n    </PopoverIconMenu>\n  );\n}\n","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 297.949 80.177\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"svgGroup\",\n    strokeLinecap: \"round\",\n    fillRule: \"evenodd\",\n    fontSize: \"9pt\",\n    stroke: \"currentColor\",\n    strokeWidth: \"0.1mm\",\n    fill: \"currentColor\",\n    transform: \"matrix(0.97954, 0, 0, 0.97954, 3.047874, 0.820251)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 133.691 32.618 L 133.691 62.989 C 133.689 63.634 133.718 64.279 133.777 64.922 C 133.903 66.234 134.167 67.315 134.57 68.165 C 134.878 68.829 135.29 69.44 135.791 69.974 C 136.167 70.37 136.594 70.714 137.061 70.997 C 138.055 71.594 139.156 71.992 140.302 72.166 C 140.426 72.186 140.55 72.203 140.674 72.218 C 141.626 72.332 142.583 72.406 143.542 72.438 C 144.002 72.454 144.462 72.462 144.922 72.462 L 144.922 79.689 C 144.075 79.819 143.229 79.917 142.383 79.982 C 142.094 80.008 141.805 80.03 141.515 80.048 C 141.257 80.065 140.985 80.08 140.698 80.093 C 140.397 80.107 140.096 80.118 139.795 80.128 C 138.802 80.16 137.809 80.177 136.816 80.177 C 135.823 80.176 134.829 80.144 133.838 80.079 C 133.48 80.056 133.121 80.027 132.764 79.992 C 132.413 79.957 132.085 79.917 131.778 79.872 C 131.602 79.846 131.425 79.818 131.25 79.786 C 130.37 79.639 129.515 79.37 128.709 78.988 C 127.686 78.499 126.786 77.787 126.074 76.905 C 124.848 75.394 123.905 73.674 123.291 71.827 C 122.878 70.601 122.559 69.345 122.338 68.07 C 122.244 67.519 122.171 66.964 122.119 66.407 C 122.08 65.992 122.045 65.577 122.012 65.162 C 121.942 64.265 121.899 63.496 121.883 62.857 C 121.878 62.673 121.875 62.49 121.875 62.306 L 121.875 32.618 L 114.648 32.618 L 128.637 6.622 L 142.48 32.618 L 133.691 32.618 Z M 242.285 62.599 L 242.285 63.38 C 242.285 63.525 242.287 63.671 242.291 63.816 C 242.3 64.148 242.317 64.545 242.342 65.006 C 242.355 65.229 242.368 65.452 242.383 65.675 C 242.448 66.684 242.578 67.71 242.773 68.751 C 242.891 69.392 243.064 70.022 243.289 70.633 C 243.409 70.957 243.547 71.274 243.701 71.583 C 243.841 71.868 244.013 72.136 244.214 72.382 C 244.528 72.771 244.941 73.069 245.41 73.243 L 242.285 79.786 C 241.773 79.783 241.264 79.717 240.768 79.59 C 240.37 79.489 239.979 79.358 239.6 79.2 C 238.87 78.895 238.177 78.509 237.533 78.049 C 237.305 77.887 237.082 77.717 236.865 77.54 C 235.986 76.824 235.238 76.027 234.619 75.148 C 234 74.269 233.528 73.308 233.203 72.267 C 232.844 73.143 232.332 73.947 231.69 74.642 C 231.196 75.188 230.611 75.708 229.935 76.203 C 229.742 76.344 229.546 76.48 229.346 76.612 C 227.388 77.898 225.225 78.84 222.949 79.396 L 222.949 71.974 C 224.488 71.659 225.938 71.008 227.197 70.069 C 228.467 69.125 229.558 68.002 230.469 66.7 L 230.469 46.095 C 230.47 45.161 230.454 44.228 230.421 43.295 C 230.351 41.382 230.204 39.776 229.98 38.478 C 229.892 37.956 229.775 37.439 229.63 36.93 C 229.317 35.851 228.899 35.005 228.376 34.392 C 228.358 34.37 228.339 34.348 228.32 34.327 C 227.572 33.467 226.558 32.883 225.439 32.667 C 224.472 32.474 223.353 32.362 222.082 32.333 C 221.85 32.328 221.619 32.325 221.387 32.325 C 219.954 32.325 218.603 32.504 217.334 32.862 C 216.503 33.095 215.685 33.369 214.881 33.683 C 214.523 33.823 214.168 33.973 213.818 34.132 C 213.248 34.39 212.692 34.676 212.151 34.99 C 211.751 35.222 211.362 35.474 210.986 35.743 C 210.795 35.88 210.605 36.019 210.416 36.158 C 210.051 36.427 209.742 36.661 209.489 36.86 C 209.385 36.942 209.282 37.025 209.18 37.11 L 204.785 30.372 C 205.24 29.871 205.855 29.362 206.63 28.845 C 206.984 28.61 207.346 28.386 207.715 28.175 C 208.485 27.735 209.28 27.339 210.095 26.99 C 210.789 26.692 211.493 26.419 212.207 26.173 C 213.391 25.766 214.596 25.423 215.817 25.146 C 216.45 25.001 217.086 24.872 217.725 24.757 C 219.607 24.422 221.513 24.243 223.424 24.223 C 223.591 24.221 223.759 24.22 223.926 24.22 C 225.846 24.217 227.76 24.413 229.639 24.806 C 231.494 25.197 233.187 25.848 234.717 26.759 C 236.129 27.607 237.375 28.705 238.395 29.999 C 238.506 30.138 238.615 30.278 238.721 30.421 C 239.384 31.323 239.922 32.311 240.319 33.358 C 240.663 34.259 240.928 35.188 241.113 36.134 C 241.569 38.413 241.878 40.708 242.041 43.019 C 242.204 45.33 242.285 47.624 242.285 49.903 L 242.285 62.599 Z M 72.754 42.189 L 72.754 79.689 L 61.035 79.689 L 61.035 49.708 C 61.035 48.63 61.031 47.551 61.023 46.473 C 61.015 45.452 61.003 44.43 60.986 43.409 C 60.954 41.424 60.743 39.65 60.352 38.087 C 59.961 36.524 59.326 35.304 58.447 34.425 C 57.75 33.728 56.757 33.308 55.468 33.163 C 55.112 33.124 54.753 33.106 54.395 33.107 C 53.939 33.107 52.962 33.205 51.465 33.4 C 49.968 33.595 48.242 34.149 46.289 35.06 L 46.289 27.345 C 47.776 26.457 49.347 25.717 50.978 25.134 C 51.204 25.054 51.432 24.977 51.66 24.903 C 52.471 24.64 53.299 24.429 54.138 24.273 C 54.995 24.112 55.866 24.029 56.738 24.025 C 58.952 24.025 61.035 24.464 62.988 25.343 C 64.942 26.223 66.689 27.504 68.115 29.103 C 69.353 30.49 70.357 32.071 71.085 33.782 C 71.246 34.154 71.395 34.532 71.533 34.913 C 72.347 37.159 72.754 39.584 72.754 42.189 Z M 42.285 48.732 L 42.285 79.689 L 30.469 79.689 L 30.469 49.708 L 30.469 43.409 C 30.469 41.424 30.274 39.65 29.883 38.087 C 29.743 37.512 29.55 36.951 29.306 36.412 C 29.006 35.759 28.64 35.192 28.208 34.712 C 28.119 34.613 28.026 34.517 27.93 34.425 C 27.157 33.68 26.081 33.251 24.701 33.137 C 24.443 33.116 24.185 33.106 23.926 33.107 C 23.676 33.108 23.427 33.119 23.178 33.141 C 22.632 33.186 21.973 33.276 21.2 33.41 C 20.953 33.453 20.706 33.499 20.459 33.546 C 19.014 33.827 17.607 34.281 16.269 34.896 C 16.151 34.95 16.034 35.004 15.918 35.06 L 15.918 27.345 C 17.481 26.434 19.157 25.685 20.947 25.099 C 22.349 24.633 23.805 24.348 25.279 24.251 C 25.609 24.23 25.939 24.22 26.27 24.22 C 29.098 24.22 31.505 24.771 33.491 25.874 C 33.608 25.939 33.724 26.006 33.838 26.075 C 34.852 26.694 35.807 27.406 36.69 28.201 C 37.755 29.15 38.806 30.265 39.844 31.544 C 40.625 32.716 41.195 33.969 41.553 35.304 C 41.911 36.639 42.139 38.022 42.236 39.454 C 42.31 40.554 42.347 41.656 42.346 42.759 C 42.346 43.139 42.342 43.518 42.334 43.898 C 42.317 44.683 42.305 45.469 42.297 46.254 C 42.289 47.08 42.285 47.906 42.285 48.732 Z M 101.367 24.61 L 101.367 79.689 L 89.453 79.689 L 89.453 24.61 L 101.367 24.61 Z M 0 24.61 L 10.645 24.61 L 11.914 30.275 L 11.914 79.689 L 0 79.689 L 0 24.61 Z M 158.789 24.61 L 169.336 24.61 L 170.605 30.275 L 170.605 60.157 L 170.605 60.353 L 170.605 79.689 L 158.789 79.689 L 158.789 24.61 Z M 218.945 72.169 L 218.945 80.079 C 218.746 80.129 218.452 80.16 218.062 80.171 C 217.933 80.175 217.805 80.177 217.676 80.177 C 215.462 80.177 213.33 79.884 211.279 79.298 C 209.293 78.746 207.446 77.781 205.859 76.466 C 204.709 75.497 203.748 74.325 203.023 73.008 C 202.713 72.453 202.437 71.879 202.197 71.29 C 201.318 69.142 200.879 66.505 200.879 63.38 C 200.871 62.096 201.003 60.816 201.27 59.56 C 201.565 58.174 202.075 56.843 202.783 55.616 C 204.053 53.435 205.681 51.645 207.666 50.245 C 209.388 49.041 211.281 48.105 213.283 47.467 C 213.67 47.341 214.06 47.226 214.453 47.12 C 216.992 46.437 219.564 46.095 222.168 46.095 L 226.465 46.095 L 226.465 53.028 L 224.316 53.028 C 223.014 53.028 221.647 53.158 220.215 53.419 C 218.782 53.68 217.448 54.168 216.211 54.884 C 215.149 55.505 214.235 56.348 213.532 57.357 C 213.393 57.553 213.26 57.754 213.135 57.96 C 212.718 58.656 212.413 59.413 212.229 60.203 C 212.019 61.068 211.914 62.029 211.914 63.087 C 211.91 63.854 211.958 64.62 212.057 65.381 C 212.3 67.184 212.855 68.601 213.721 69.63 C 214.925 71.062 216.666 71.908 218.945 72.169 Z M 280.762 58.107 L 280.762 47.755 C 282.764 48.424 284.751 49.14 286.719 49.903 C 288.432 50.56 290.07 51.398 291.605 52.403 C 291.818 52.543 292.028 52.686 292.236 52.833 C 293.897 54.005 295.264 55.454 296.338 57.179 C 297.412 58.904 297.949 61.069 297.949 63.673 C 297.955 64.781 297.858 65.887 297.659 66.977 C 297.449 68.132 297.087 69.254 296.582 70.314 C 295.696 72.167 294.451 73.827 292.92 75.196 C 291.593 76.373 290.086 77.33 288.456 78.031 C 288.141 78.169 287.822 78.298 287.5 78.419 C 285.753 79.068 283.943 79.533 282.1 79.808 C 281.655 79.876 281.209 79.934 280.762 79.982 L 280.762 70.704 C 281.474 70.582 282.177 70.411 282.866 70.192 C 284.091 69.796 285.098 69.267 285.889 68.605 C 286.967 67.717 287.617 66.414 287.679 65.019 C 287.69 64.864 287.695 64.708 287.695 64.552 C 287.703 63.923 287.595 63.297 287.377 62.707 C 287.068 61.894 286.531 61.209 285.768 60.65 C 285.743 60.632 285.718 60.614 285.693 60.597 C 285.006 60.115 284.285 59.683 283.536 59.305 C 282.693 58.875 281.769 58.476 280.762 58.107 Z M 276.758 23.732 L 276.758 33.497 C 276.136 33.613 275.528 33.796 274.946 34.043 C 274.132 34.384 273.4 34.898 272.803 35.548 C 272.287 36.128 271.909 36.818 271.698 37.566 C 271.543 38.091 271.445 38.667 271.406 39.296 C 271.393 39.511 271.387 39.727 271.387 39.943 C 271.382 40.514 271.459 41.083 271.618 41.632 C 271.851 42.425 272.294 43.14 272.9 43.702 C 273.451 44.212 274.047 44.671 274.682 45.072 C 275.27 45.447 275.915 45.799 276.617 46.127 C 276.664 46.149 276.711 46.171 276.758 46.193 L 276.758 56.642 C 275.622 56.307 274.499 55.932 273.389 55.519 C 272.247 55.095 271.123 54.622 270.02 54.103 C 268.905 53.518 267.819 52.879 266.767 52.188 C 264.892 50.948 263.388 49.666 262.256 48.341 C 261.182 47.066 260.43 45.552 260.063 43.926 C 259.816 42.897 259.685 41.78 259.67 40.575 C 259.669 40.494 259.668 40.414 259.668 40.333 C 259.661 39.006 259.806 37.683 260.101 36.39 C 260.319 35.446 260.632 34.526 261.035 33.644 C 261.946 31.658 263.216 29.965 264.844 28.566 C 266.471 27.166 268.31 26.059 270.361 25.245 C 272.408 24.432 274.563 23.923 276.758 23.732 Z M 174.609 37.013 L 174.609 27.052 C 175.469 26.575 176.368 26.171 177.295 25.843 C 178.15 25.537 179.066 25.271 180.045 25.046 C 180.186 25.014 180.327 24.982 180.469 24.952 C 181.254 24.788 182.046 24.659 182.843 24.566 C 184.76 24.335 187.061 24.22 189.746 24.22 L 189.746 36.525 C 188.92 36.293 188.079 36.113 187.23 35.987 C 186.375 35.856 185.458 35.762 184.479 35.703 C 184.021 35.676 183.563 35.657 183.105 35.646 C 181.673 35.646 180.225 35.76 178.76 35.987 C 177.606 36.164 176.466 36.425 175.35 36.768 C 175.102 36.845 174.855 36.927 174.609 37.013 Z M 259.863 75.294 L 264.844 67.384 C 265.531 67.862 266.244 68.302 266.98 68.702 C 267.753 69.125 268.587 69.532 269.482 69.923 C 271.273 70.704 273.535 71.095 276.27 71.095 L 276.758 71.095 L 276.758 80.177 C 275.977 80.177 275.195 80.165 274.414 80.14 C 273.697 80.117 272.981 80.08 272.266 80.03 C 270.899 79.933 269.548 79.705 268.213 79.347 C 267.179 79.067 266.167 78.715 265.182 78.294 C 264.838 78.148 264.497 77.994 264.16 77.833 C 263.397 77.467 262.651 77.066 261.926 76.63 C 261.223 76.209 260.535 75.763 259.863 75.294 Z M 296.094 28.126 L 292.285 36.232 C 290.527 35.32 288.655 34.636 286.67 34.181 C 284.684 33.725 282.715 33.432 280.762 33.302 L 280.762 23.634 C 283.691 23.764 286.393 24.171 288.867 24.855 C 291.011 25.456 293.069 26.329 294.99 27.454 C 295.363 27.67 295.731 27.894 296.094 28.126 Z M 101.828 9.959 C 102.244 9.04 102.454 8.041 102.441 7.032 C 102.441 7.002 102.441 6.971 102.441 6.941 C 102.451 5.1 101.71 3.335 100.391 2.052 C 100.369 2.031 100.348 2.009 100.326 1.988 C 99.025 0.685 97.251 -0.032 95.41 0.001 C 94.61 -0.005 93.815 0.131 93.062 0.401 C 92.106 0.758 91.24 1.321 90.527 2.052 C 90.506 2.073 90.485 2.095 90.464 2.116 C 89.161 3.417 88.444 5.191 88.477 7.032 C 88.477 8.92 89.144 10.548 90.479 11.915 C 91.053 12.513 91.733 13 92.483 13.353 C 93.402 13.769 94.401 13.979 95.41 13.966 C 97.363 13.966 99.024 13.299 100.391 11.964 C 100.989 11.389 101.476 10.71 101.828 9.959 Z\",\n    vectorEffect: \"non-scaling-stroke\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.aae61ab1.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Stack, Link } from '@mui/material';\nimport {\n  Info as InfoIcon,\n  GitHub as GitHubIcon,\n} from '@mui/icons-material';\n\nimport { ReactComponent as Logo } from 'img/logo.svg';\nimport PopoverIconMenu from 'components/generic/PopoverIconMenu';\n\n/**\n * Button that opens the info menu\n */\nexport default function InfoMenu() {\n  return (\n    <PopoverIconMenu\n      icon={<InfoIcon htmlColor=\"#ffffff\" />}\n    >\n      <div className=\"info-menu\">\n        <Logo className=\"info-menu-logo\" />\n        <p>A graphing calculator for linear algebra.</p>\n        <p>Try some of the examples from the menu in the top-left corner!</p>\n        <Stack direction=\"row\" alignItems=\"center\" gap={1}>\n          <GitHubIcon />\n          <Link href=\"https://github.com/davidtranhq/mitras\">\n            github.com/davidtranhq/mitras\n          </Link>\n        </Stack>\n      </div>\n    </PopoverIconMenu>\n  );\n}\n","import React from 'react';\n\nimport GraphMenu from 'components/GraphMenu';\nimport ImportExportMenu from 'components/ImportExportMenu';\nimport InfoMenu from 'components/InfoMenu';\n\nimport { ReactComponent as Logo } from 'img/logo.svg';\n\nexport interface HeaderProps {\n  exportExprs: () => string;\n  exportGraphPNG: () => void;\n  importExprs: (exprsBase64: string) => void;\n}\n\nexport default function Header({ exportExprs, exportGraphPNG, importExprs }: HeaderProps) {\n  return (\n    <div id=\"header\">\n      <div className=\"header-left\">\n        <GraphMenu importGraph={importExprs} />\n      </div>\n      <div className=\"header-center\">\n        <Logo className=\"logo\" />\n      </div>\n      <div className=\"header-right\">\n        <ImportExportMenu\n          exportExprs={exportExprs}\n          exportGraphPNG={exportGraphPNG}\n          importExprs={importExprs}\n        />\n        <InfoMenu />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport {\n  Add as AddIcon,\n  Calculate as CalculateIcon,\n  FormatQuote as FormatQuoteIcon,\n  DoubleArrow as DoubleArrowIcon,\n} from '@mui/icons-material';\nimport {\n  IconButton,\n  MenuItem,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\n\nimport PopoverIconMenu from 'components/generic/PopoverIconMenu';\nimport type { ExprType } from 'hooks/useExprs';\n\nexport interface ToolbarProps {\n  newExpr: (type: ExprType) => void,\n  hideSidebar: () => void,\n}\n\nexport default function Toolbar({ newExpr, hideSidebar }: ToolbarProps) {\n  // options for different items that can be added to the expression list\n  const newItemButtons = [\n    {\n      // add new expression\n      icon: <CalculateIcon />,\n      text: 'Add Expression',\n      action: () => newExpr('math'),\n    },\n    {\n      // add new comment\n      icon: <FormatQuoteIcon />,\n      text: 'Add Comment',\n      action: () => newExpr('comment'),\n    },\n  ].map(({ icon, text, action }) => (\n    <MenuItem\n      onClick={action}\n    >\n      <ListItemIcon>\n        {icon}\n      </ListItemIcon>\n      <ListItemText>{text}</ListItemText>\n    </MenuItem>\n  ));\n\n  return (\n    <div className=\"toolbar\">\n      <PopoverIconMenu\n        icon={<AddIcon />}\n        closeOnClick\n      >\n        {newItemButtons}\n      </PopoverIconMenu>\n      <IconButton\n        className=\"hide-sidebar\"\n        onClick={hideSidebar}\n      >\n        <DoubleArrowIcon />\n      </IconButton>\n    </div>\n  );\n}\n","// convert a decimal number to a hex string\nfunction toHex(n: number) {\n  let x = Math.round(n);\n  x = x < 0 ? 0 : x;\n  x = x > 255 ? 255 : x;\n  let str = x.toString(16);\n  if (str.length < 2) {\n    str = `0${str}`;\n  }\n  return str;\n}\n\n/**\n * Adjust the brightness of a given color.\n * @param color 7-char hex string for a color '#XXXXXX'\n * @param light factor by which to tint/shade. < 0 darkens, > 0 brightens.\n * @returns The adjusted color as a 7-char hex string.\n */\nexport function shadeColor(color: string, light: number) {\n  let r = parseInt(color.substr(1, 2), 16);\n  let g = parseInt(color.substr(3, 2), 16);\n  let b = parseInt(color.substr(5, 2), 16);\n\n  if (light < 0) {\n    // darken\n    r *= (1 + light);\n    g *= (1 + light);\n    b *= (1 + light);\n  } else {\n    // brighten\n    r = (1 - light) * r + light * 255;\n    g = (1 - light) * g + light * 255;\n    b = (1 - light) * b + light * 255;\n  }\n\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n}\n\n/**\n * Convert HSV to RGB. h, s, v should be between 0 and 1 inclusive.\n */\nfunction HSVtoRGB(h: number, s: number, v: number) {\n  const i = Math.floor(h * 6);\n  const f = h * 6 - i;\n  const p = v * (1 - s);\n  const q = v * (1 - f * s);\n  const t = v * (1 - (1 - f) * s);\n  let r = 0;\n  let g = 0;\n  let b = 0;\n  switch (i % 6) {\n    case 0: r = v; g = t; b = p; break;\n    case 1: r = q; g = v; b = p; break;\n    case 2: r = p; g = v; b = t; break;\n    case 3: r = p; g = q; b = v; break;\n    case 4: r = t; g = p; b = v; break;\n    case 5: r = v; g = p; b = q; break;\n  }\n  return {\n    r: Math.round(r * 255),\n    g: Math.round(g * 255),\n    b: Math.round(b * 255),\n  };\n}\n\nexport function randomColor() {\n  const randomHue = Math.random();\n  const { r, g, b } = HSVtoRGB(randomHue, 0.9, 0.8);\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\n}\n","import * as math from 'mathjs';\n\n/**\n * Check if `arr` is an n-dimensional vector.\n */\nexport function isVector(mat: math.Matrix, n?: number) {\n  const dimensions = mat.size();\n  return (dimensions.length === 1 && (n === undefined || dimensions[0] === n));\n}\n\n/**\n * Check if `arr` is an n-dimensional matrix.\n */\nexport function isMatrix(mat: math.Matrix, n: number) {\n  const dimensions = mat.size();\n  return (dimensions.length === n && dimensions.every((dim) => dim === n));\n}\n\nexport function normalizeMatrix(mat: math.Matrix) {\n  const dimensions = mat.size();\n  // if the matrix is a vector, there is only one column\n  // otherwise, for dimensions [a, b], there are b columns\n  const nCols = dimensions.length === 1 ? 1 : dimensions[1];\n  // extract vectors\n  const vectors = [];\n  for (let i = 0; i < nCols; ++i) {\n    // `math.column` returns a column still as a matrix (e.g. [[a], [b]]),\n    // so we flatten it to turn it into a vector\n    vectors.push(math.flatten(math.column(mat, i)));\n  }\n  const normalized = vectors.map((v) => math.divide(v, math.norm(v)));\n  // create matrix from normalized columns\n  // (for some reason MathJsStatic does not expose `matrixFromColumns`, so we cast to `any`)\n  return (math as any).matrixFromColumns(...normalized);\n}\n","import * as math from 'mathjs';\nimport { parseTex } from 'tex-math-parser';\n\nimport { isVector } from 'utils/matrix';\n\n// result from a call to math.evaluate() or evaluateTex() (tex-math-parser)\nexport type MathJSEvaluation = any;\n\n/**\n * Fix floating-point rounding errors in a MathJS evaluation\n */\nfunction fixRoundingError(val: MathJSEvaluation) {\n  const type = math.typeOf(val);\n  if (type === 'Matrix' || type === 'Array') {\n    return val.map(fixRoundingError);\n  }\n  if (type === 'number' || type === 'Complex' || type === 'BigNumber' || type === 'Fraction') {\n    return math.abs(val) < Number.EPSILON ? 0 : val;\n  }\n  return val;\n}\n\n/**\n * Format a MathJSEvaluation as a JSON string.\n */\nfunction evaluationToJson(evaluation: MathJSEvaluation) {\n  // lower precision for matrices (because we need to fit more numbers)\n  return math.format(evaluation, { precision: 6 });\n}\n\n/**\n * Format a list of MathJSEvaluations as a TeX string (non-recursively).\n */\nfunction evaluationListToTex(evaluations: MathJSEvaluation[]): string {\n  return evaluations.map((evaluation) => evaluationToTex(evaluation, '')).join(',\\\\space');\n}\n\n/**\n * Format a MathJSEvaluation as a TeX string. lastFn is passed because the output of certain\n * functions should be formatted differently (e.g. eigenvalues as a list rather than a vector)\n */\nfunction evaluationToTex(evaluation: MathJSEvaluation, lastFn: string): string {\n  let tex;\n  if (lastFn === 'eigenvalues') {\n    // display eigens as a list of comma-seperated values/vectors (instead of a vector/matrix)\n    tex = evaluationListToTex(evaluation.toArray());\n  } else if (lastFn === 'eigenvectors') {\n    // display eigenvectors as a list of comma-seperated vectors (instead of a matrix)\n    tex = evaluationListToTex(evaluation.columns());\n  } else {\n    tex = math.parse(evaluationToJson(evaluation)).toTex();\n  }\n  return tex;\n}\n\n/**\n * Find the last function node to be evaluated in a MathJS expression tree.\n * @param root The root node of a MathJS expression tree\n * @returns The last function node to be evaluated, or null if there are none\n */\nfunction lastFunctionNode(root: any): any {\n  // reverse postfix\n  if (root.type === 'FunctionNode') {\n    return root;\n  }\n  if (!root.items || root.items.length < 1) {\n    return null;\n  }\n  for (let i = root.items.length - 1; i >= 0; --i) {\n    const result = lastFunctionNode(root.items[i]);\n    if (!result) {\n      return result;\n    }\n  }\n  // no function node found\n  return null;\n}\n\n/**\n * Evaluate a TeX math expression.\n * @returns An object containing the output of math.evaluate() and the root of the expression tree.\n */\nfunction evaluateExpr(texStr: string, scope: {}) {\n  let root: math.MathNode | null = null;\n  let evaluated: any = null;\n  try {\n    root = parseTex(texStr);\n  } catch (e) {\n    return { root: null, evaluated: null };\n  }\n  try {\n    evaluated = root.evaluate(scope);\n  } catch (e) {\n    return { root, evaluated: null };\n  }\n  return { root, evaluated };\n}\n\nexport type MathScope = {\n  [key: string]: any,\n};\n\nexport interface ExprAnalysis {\n  // The evaluated expression as a TeX string\n  evaluatedTex: string;\n  // The evaluated expression as a JavaScript value\n  evaluatedValue: any;\n  // The type of the evaluated expression as denoted by math.typeOf\n  type: string;\n  // The last function in the expression to be evaluated\n  lastFn: string;\n  // The arguments to lastFn (as an array of JavaScript values)\n  lastArgs: any[];\n  // Flag indicating if the expression is an assignment (e.g. x = 1)\n  isAssignment: boolean;\n}\n\nconst defaultAnalysis: ExprAnalysis = {\n  evaluatedTex: '',\n  evaluatedValue: null,\n  type: '',\n  lastFn: '',\n  lastArgs: [],\n  isAssignment: false,\n};\n\n/**\n * Analyze a TeX math expression.\n * @returns An object containing an analysis of the expression along with the modified scope\n *          (e.g. if the expression analyzed is x=1, then `x: 1` is added to the scope)\n */\nexport default function analyzeExpr(texStr: string, scope: MathScope): {\n  analysis: ExprAnalysis,\n  scope: MathScope,\n} {\n  const originalScope = { ...scope };\n  const { root, evaluated } = evaluateExpr(texStr, scope);\n  if (root === null) {\n    // parsing failed\n    return {\n      analysis: defaultAnalysis,\n      scope,\n    };\n  }\n  const isAssignment = !!root.isAssignmentNode;\n  const lastFnNode = lastFunctionNode(root);\n  const lastFn = lastFnNode ? lastFnNode.fn.name : '';\n  if (evaluated === null) {\n    // evaluation failed\n    return {\n      analysis: { ...defaultAnalysis, isAssignment, lastFn },\n      scope,\n    };\n  }\n  // evaluate the arguments to the last function\n  const lastArgs = lastFnNode\n    ? lastFnNode.args.map((arg: any) => arg.evaluate(originalScope))\n    : [];\n  const roundedEval = fixRoundingError(evaluated);\n  const evaluatedTex = evaluationToTex(roundedEval, lastFn);\n  let type = math.typeOf(evaluated);\n  if (type === 'Matrix') {\n    type = isVector(roundedEval) ? 'Vector' : type;\n  } else if (type === 'string') {\n    // don't return analysis for string\n    return {\n      analysis: defaultAnalysis,\n      scope,\n    };\n  }\n  return {\n    analysis: {\n      evaluatedTex,\n      evaluatedValue: roundedEval,\n      type,\n      isAssignment,\n      lastFn,\n      lastArgs,\n    },\n    scope,\n  };\n}\n","import React from 'react';\nimport analyzeExpr, { ExprAnalysis, MathScope } from 'utils/evaluateExpr';\nimport { randomColor } from 'utils/color';\n\nexport const enum AnimationState {\n  Paused = 1,\n  Requesting,\n  Running,\n}\n// Everything is readonly because it is used in React state: this type should be\n// modified by creating a new object instead of modifying the existing one\nexport interface ExprData extends ExprAnalysis {\n  // unique identifier for the expression\n  readonly id: number;\n\n  // The expression formatted as a TeX string\n  readonly tex: string;\n  // TeX to insert into the expression on the next render\n  // (used to insert templates e.g. matrices, vectors, functions, etc.)\n  readonly texToInsert: string;\n  // The current animation state on the graph.\n  readonly animationState: AnimationState\n\n  /* Values obtained when evaluating the expression */\n  // The evaluated expression as a TeX string\n  readonly evaluatedTex: string;\n  // The evaluated expression as a JavaScript value\n  readonly evaluatedValue: any;\n  // The type of the evaluated expression as denoted by math.typeOf\n  readonly type: string;\n  // The last function in the expression to be evaluated\n  readonly lastFn: string;\n  // The arguments to lastFn (as an array of JavaScript values)\n  readonly lastArgs: any[];\n  // Flag indicating if the expression is an assignment (e.g. x = 1)\n  readonly isAssignment: boolean;\n  // Minimum value on a variable slider\n  readonly sliderMin: number;\n  // Maximum value on a variable slider\n  readonly sliderMax: number;\n  // Step value on a variable slider\n  readonly sliderStep: number;\n\n  /* Options for drawing the expression on the graph */\n  // Color of the drawn expression as a 7-digit hex string (#abcdef)\n  readonly color: string;\n  // Toggle visibility on the graph\n  readonly visible: boolean;\n  // Duration of the animation in ms\n  readonly animationDuration: number;\n  /* Matrix specific options */\n  // Show minor grid lines\n  readonly showMinor: boolean;\n  // Show coordinate numbers\n  readonly showCoords: boolean;\n}\n\nconst defaultExprData: ExprData = {\n  id: -1,\n  tex: '',\n  texToInsert: '',\n  animationState: AnimationState.Paused,\n  evaluatedTex: '',\n  evaluatedValue: null,\n  type: '',\n  lastFn: '',\n  lastArgs: [],\n  isAssignment: false,\n  sliderMin: -10,\n  sliderMax: 10,\n  sliderStep: 1,\n  color: '#000000',\n  visible: true,\n  animationDuration: 2000,\n  showMinor: true,\n  showCoords: true,\n};\n\nexport type ExprType = 'math' | 'comment';\n\n/**\n * generateCallbacks() generates a function `optionChange` which returns a function\n * used to modify the option properties of an ID-specific ExprData.\n *\n * The following are overloads for the function returned by `optionChange`.\n */\nexport type ExprOptionChangeFunc = {\n  (option: 'color', value: string): void,\n  (option: 'visible', value: boolean): void,\n  (option: 'showMinor', value: boolean): void,\n  (option: 'showCoords', value: boolean): void,\n};\nexport type ExprSliderOptionChangeFunc = (option: ExprSliderOption, value: number) => void;\n\nexport type ExprOption = 'color' | 'visible' | 'showMinor' | 'showCoords';\nexport type ExprOptionValue = string | boolean;\n\nexport type ExprSliderOption = 'sliderMax' | 'sliderMin' | 'sliderStep';\n\nexport default function useExprs() {\n  const exprID = React.useRef(0);\n  const [exprs, setExprs] = React.useState<ExprData[]>([{\n    ...defaultExprData,\n    id: exprID.current,\n    color: randomColor(),\n  }]);\n  const [focusedID, setFocusedID] = React.useState(0);\n\n  /**\n   * Re-order two expressions in the list\n   */\n  function reorderExprs(idx1: number, idx2: number) {\n    setExprs((prevList) => {\n      const newList = [...exprs];\n      const [swapped] = newList.splice(idx1, 1);\n      newList.splice(idx2, 0, swapped);\n      return newList;\n    });\n  }\n\n  /**\n   * Get the expression associated with the given ID\n   */\n  function getExpr(id: number) {\n    return exprs.find((expr) => expr.id === id);\n  }\n\n  /**\n   * Create a new default ExprData and add it to the exprs object.\n   */\n  function newExpr(type: ExprType) {\n    exprID.current += 1;\n    const newItem = {\n      ...defaultExprData,\n      id: exprID.current,\n      color: randomColor(),\n    };\n    if (type === 'comment') {\n      newItem.type = 'string';\n    }\n    setExprs((prevList) => [...prevList, newItem]);\n    return exprID.current;\n  }\n\n  /**\n   * Immutably update the ID-specified ExprData in exprs by creating a new ExprData\n   * with the desired modfications\n   */\n  function updateExpr(\n    id: number,\n    modifications: Partial<ExprData>,\n  ) {\n    setExprs((prevList: ExprData[]) => {\n      const originalIdx = prevList.findIndex((exprData) => exprData.id === id);\n      if (originalIdx === -1) {\n        // attempted to update an expression that doesn't exist: do nothing\n        return prevList;\n      }\n      const original = prevList[originalIdx];\n      // write modifications to the expression to update\n      const modifiedExpr = {\n        ...original,\n        ...modifications,\n      };\n      // insert modified expression into the array\n      const newList = [...prevList];\n      newList[originalIdx] = modifiedExpr;\n      return newList;\n    });\n  }\n\n  /**\n   * Evaluate the expressions currently in `exprs` and update the corresponding properties\n   */\n  function evaluateExprs() {\n    let scope: MathScope = {};\n    function evaluateOnce(exprsToEvaluate: ExprData[]) {\n      const evaluatedExprs = [...exprsToEvaluate];\n      exprsToEvaluate.forEach((exprData, idx) => {\n        // do not evaluate the expression if it is a comment\n        if (exprData.type === 'string') {\n          return;\n        }\n        // analyze the expression and update the results into the list\n        let analysis;\n        ({ scope, analysis } = analyzeExpr(exprData.tex, scope));\n        evaluatedExprs[idx] = { ...exprData, ...analysis };\n      });\n      return evaluatedExprs;\n    }\n    setExprs((prevExprs) => {\n      // we evaluate twice: first pass-through to get variables in scope\n      const firstExprs = evaluateOnce(prevExprs);\n      return evaluateOnce(firstExprs);\n    });\n  }\n\n  /**\n   * Load an existing ExprData list\n   */\n  function loadExprs(exprImport: ExprData[]) {\n    // update the current exprID to the greatest of the import\n    exprImport.forEach((exprData) => {\n      exprID.current = Math.max(exprID.current, exprData.id);\n    });\n    setExprs(exprImport);\n  }\n\n  /**\n   * Update `texToInsert` (TeX to be inserted on the next render)\n   */\n  function insertTex(id: number, texToInsert: string) {\n    updateExpr(id, { texToInsert });\n  }\n\n  function onExprInput(id: number) {\n    const mathExprInput = (tex: string) => {\n      updateExpr(id, { tex, texToInsert: '' });\n      evaluateExprs();\n    };\n    // don't re-evaluate all expression if the expression is a comment\n    const commentExprInput = (tex: string) => {\n      updateExpr(id, { tex, texToInsert: '' });\n    };\n    const thisExpr = getExpr(id);\n    if (thisExpr === undefined) {\n      return (tex: string) => { };\n    }\n    const isComment = thisExpr.type === 'string';\n    return isComment ? commentExprInput : mathExprInput;\n  }\n\n  function onExprFocus(id: number) {\n    return () => {\n      setFocusedID(id);\n    };\n  }\n\n  function onExprOptionChange(id: number): ExprOptionChangeFunc {\n    return (option: ExprOption, value: ExprOptionValue) => {\n      updateExpr(id, { [option]: value });\n    };\n  }\n\n  function onExprSliderOptionChange(id: number) {\n    return (option: ExprSliderOption, value: number) => {\n      updateExpr(id, { [option]: value });\n    };\n  }\n\n  function onExprDelete(id: number) {\n    return () => {\n      setExprs((prev) => prev.filter((exprData) => exprData.id !== id));\n    };\n  }\n\n  /**\n   * Flag the specified expression as requesting an animation start\n   * (a call to `animateExpr`). This is not required before calling `animateExpr`,\n   * but is instead used to indicate that `animateExpr` should be called.\n   */\n  function onExprAnimate(id: number) {\n    return () => {\n      updateExpr(id, { animationState: AnimationState.Requesting });\n    };\n  }\n\n  /**\n   * Start the animation of the specified expression.\n   * @param id ID of the expression to animate\n   * @param drawFrame function called on every frame\n   */\n  function animateExpr(id: number, drawFrame: (elapsed: number) => void) {\n    let start: number;\n    const thisExpr = getExpr(id);\n    if (thisExpr === undefined) {\n      // console.log('Error: attempted to animate non-existent expression');\n      return;\n    }\n    updateExpr(id, { animationState: AnimationState.Running });\n    const stepFrame = (time: number) => {\n      if (start === undefined) {\n        start = time;\n      }\n      const elapsed = time - start;\n      drawFrame(elapsed);\n      if (elapsed < thisExpr.animationDuration) {\n        window.requestAnimationFrame(stepFrame);\n      } else {\n        // animation finished\n        updateExpr(id, { animationState: AnimationState.Paused });\n      }\n    };\n    window.requestAnimationFrame(stepFrame);\n  }\n\n  /**\n   * Generate callbacks unique to an ID-specific expression.\n   */\n  function generateCallbacks(id: number) {\n    return {\n      input: onExprInput(id),\n      focus: onExprFocus(id),\n      delete: onExprDelete(id),\n      animate: onExprAnimate(id),\n      optionChange: onExprOptionChange(id),\n      sliderOptionChange: onExprSliderOptionChange(id),\n    };\n  }\n\n  return {\n    exprs,\n    loadExprs,\n    reorderExprs,\n    focusedID,\n    newExpr,\n    insertTex,\n    animateExpr,\n    generateCallbacks,\n  };\n}\n","import * as math from 'mathjs';\nimport { shadeColor } from 'utils/color';\nimport { isVector, isMatrix, normalizeMatrix } from 'utils/matrix';\nimport { ExprData, AnimationState } from 'hooks/useExprs';\n\n/**\n * Options passed to `drawGraphs`\n */\nexport interface DrawOptions {\n  color: string; // color of the graph\n  showCoords: boolean; // flag to show coordinate numbers along the axis\n  showMinor: boolean; // flag to show minor grid lines\n  visible: boolean;\n}\n\nfunction easeInOutCubic(x: number) {\n  return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}\n\n/**\n * Get the number of pixels for one unit square.\n */\nfunction pxPerUnit(step: math.BigNumber, stepPx: number) {\n  return math.number(math.divide(math.bignumber(stepPx), step) as math.BigNumber) as number;\n}\n\nfunction setOrigin(ctx: CanvasRenderingContext2D, x: number, y: number) {\n  ctx.setTransform(1, 0, 0, 1, x, y);\n}\n\n/**\n * Get the coordinates of the top, bottom, left, and rightmost visible points of a canvas.\n */\nfunction boundingBox(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\n  const { e: xOrigin, f: yOrigin } = ctx.getTransform();\n  const bb = {\n    top: -yOrigin,\n    bottom: canvas.height - yOrigin,\n    left: -xOrigin,\n    right: canvas.width - xOrigin,\n  };\n  return {\n    ...bb,\n    max: () => Math.max(...(Object.values(bb).map((x) => Math.abs(x)))),\n  };\n}\n\n/**\n * Clear a canvas context.\n */\nfunction clear(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D) {\n  const {\n    top,\n    bottom,\n    left,\n    right,\n  } = boundingBox(canvas, ctx);\n  ctx.clearRect(left, top, right - left, bottom - top);\n}\n\n/**\n * Add a background to the canvas.\n */\nfunction setBackground(canvas: HTMLCanvasElement, ctx: CanvasRenderingContext2D, color: string) {\n  const {\n    top,\n    bottom,\n    left,\n    right,\n  } = boundingBox(canvas, ctx);\n  const width = right - left;\n  const height = bottom - top;\n  // Save the current compositing operation (to restore later)\n  const compositeOperation = ctx.globalCompositeOperation;\n  // Draw behind current content\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillStyle = 'white';\n  ctx.fillRect(left, top, width, height);\n  // restore composite operation\n  ctx.globalCompositeOperation = compositeOperation;\n}\n\n/**\n   * Draw a line from p0 to p1 with the specified color.\n   */\nfunction drawLine(\n  ctx: CanvasRenderingContext2D,\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  color:\n  string = '#000000',\n) {\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(x0, y0);\n  ctx.lineTo(x1, y1);\n  ctx.stroke();\n  ctx.closePath();\n  ctx.restore();\n}\n\n/**\n   * Draw text at p(x, y) with a background.\n   */\nfunction drawTextWithBG(\n  canvas: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  txt: string,\n  x: number,\n  y: number,\n  options = { color: 'black', bgcolor: 'white' },\n) {\n  const bb = boundingBox(canvas, ctx);\n  if (x < bb.left || x > bb.right || y < bb.top || y > bb.bottom) {\n    return;\n  }\n  ctx.save();\n  ctx.textBaseline = 'middle';\n  ctx.fillStyle = options.bgcolor;\n  const metric = ctx.measureText(txt);\n  const padding = 2;\n  const w = metric.actualBoundingBoxLeft + metric.actualBoundingBoxRight;\n  const h = metric.actualBoundingBoxAscent + metric.actualBoundingBoxDescent;\n  const left = x - metric.actualBoundingBoxLeft;\n  const top = y - metric.actualBoundingBoxAscent;\n  ctx.fillRect(left - padding,\n    top - padding,\n    w + padding * 2,\n    h + padding * 2);\n  ctx.fillStyle = options.color;\n  ctx.fillText(txt, x, y);\n  ctx.restore();\n}\n\n/**\n   * Draws a graph on a canvas with a specified matrix transformation.\n   * @param canvas drawing canvas\n   * @param stepValue value by which to increment on each marker\n   * @param stepPx px between each marker\n   * @param transform matrix transformation to be applied before drawing\n   * @param options optional drawing parameters\n   */\nfunction drawGraph(\n  canvas: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  stepValue: math.BigNumber,\n  stepPx: number,\n  transform: math.Matrix = math.identity(2) as math.Matrix,\n  options: DrawOptions = {\n    color: '#000000',\n    showCoords: true,\n    showMinor: true,\n    visible: true,\n  },\n): void {\n  if (!options.visible) return;\n  ctx.save();\n  // px per step before zooming in/out\n  const pxPerUnscaledStep = 100;\n  // px offset from the main axis for coordinates\n  const coordOffset = Math.floor(pxPerUnscaledStep / 6);\n  // number of subdivisions for each step (4 or 5 depending on parity)\n  const subSteps = math.chain(stepValue).mod(2).equal(0).done() ? 4 : 5;\n  const pxPerSubStep = Math.floor(stepPx / subSteps);\n  // maximum steps that will be rendered in either direction\n  const maxSteps = Math.floor(boundingBox(canvas, ctx).max() / stepPx) + 1;\n  // coordinate of the last step to be rendered\n  const maxCoord = maxSteps * stepPx;\n  const axisColor = options.color;\n  const mainColor = shadeColor(options.color, 0.5);\n  const minorColor = shadeColor(options.color, 0.9);\n\n  // Draw a transformed horizontal line (according to the matrix transform) at x\n  const drawHorizontal = (y: number, color: string = 'black') => {\n    const v0 = math.multiply(transform, [-maxCoord, y]).valueOf() as [number, number];\n    const v1 = math.multiply(transform, [maxCoord, y]).valueOf() as [number, number];\n    // y-coordinate is negated because down is positive on HTMLCanvas\n    drawLine(ctx, v0[0], -v0[1], v1[0], -v1[1], color);\n  };\n  // Draw a transformed vertical line (according to the matrix transform) at y\n  const drawVertical = (x: number, color: string = 'black') => {\n    const v0 = math.multiply(transform, [x, -maxCoord]).valueOf() as [number, number];\n    const v1 = math.multiply(transform, [x, maxCoord]).valueOf() as [number, number];\n    // y-coordinate is negated because down is positive on HTMLCanvas\n    drawLine(ctx, v0[0], -v0[1], v1[0], -v1[1], color);\n  };\n  // Draw text at the transformed position of (x,y)\n  const drawText = (txt: string, x: number, y: number, color: string = 'black') => {\n    const v = math.multiply(transform, [x, y]).valueOf() as [number, number];\n    // y-coordinate is negated because down is positive on HTMLCanvas\n    drawTextWithBG(canvas, ctx, txt, v[0], -v[1], { color, bgcolor: 'white' });\n  };\n  // actual drawing\n  for (let i = 0; i <= maxSteps; ++i) {\n    const x = i * stepPx;\n    const y = i * stepPx;\n    // draw minor lines (subdivisions)\n    if (options.showMinor && i < maxSteps) {\n      for (let j = 1; j < subSteps; ++j) {\n        const px = j * pxPerSubStep;\n        drawHorizontal(y + px, minorColor);\n        drawHorizontal(-y - px, minorColor);\n        drawVertical(x + px, minorColor);\n        drawVertical(-x - px, minorColor);\n      }\n    }\n    // draw major lines\n    drawHorizontal(y, mainColor);\n    drawHorizontal(-y, mainColor);\n    drawVertical(x, mainColor);\n    drawVertical(-x, mainColor);\n    // draw coordinates\n    if (options.showCoords && i !== 0) {\n      // use scientific notation for x < 1e-05 and x > 1e+05\n      const coord = math.format(math.multiply(stepValue, i), {\n        lowerExp: -5,\n        upperExp: 5,\n      });\n      // y-coordinates\n      ctx.font = '16px calibri';\n      ctx.textAlign = 'right';\n      drawText(`-${coord}`, -coordOffset, -y, options.color);\n      drawText(coord, -coordOffset, y, options.color);\n      // x-coordinates\n      ctx.textAlign = 'center';\n      drawText(coord, x, -coordOffset, options.color);\n      drawText(`-${coord}`, -x, -coordOffset, options.color);\n    }\n  }\n  // draw (0,0) and main axis last (so they appear above everything else)\n  if (options.showCoords) {\n    drawText('0', -coordOffset, -coordOffset, options.color);\n  }\n  drawHorizontal(0, axisColor);\n  drawVertical(0, axisColor);\n  ctx.restore();\n}\n\nfunction drawExpressions(\n  canvas: HTMLCanvasElement,\n  ctx: CanvasRenderingContext2D,\n  exprs: ExprData[],\n  step: math.BigNumber,\n  stepPx: number,\n  zoomFactor: number,\n  animateExpr?: (id: number, drawFrame: (elapsed: number) => void) => void,\n) {\n  /**\n   * Draw an arrow from (0,0) to (vector.x, vector.y).\n   */\n  function drawVector(vx0: number, vy0: number, vx1: number, vy1: number, options: DrawOptions) {\n    const unitPx = pxPerUnit(step, stepPx);\n    const [x0, y0, x1, y1] = [vx0, -vy0, vx1, -vy1].map((x) => x * unitPx);\n    const dx = x1 - x0;\n    const dy = y1 - y0;\n    const length = Math.sqrt(dx * dx + dy * dy);\n    const headlen = length < 20 ? length * 0.75 : 15; // length of head in pixels\n    const angle = Math.atan2(dy, dx);\n    const squish = 0.9; // angle of arrow head\n    const rightCorner = [ // left corner of the arrow head\n      x1 - headlen * Math.cos(angle + squish - Math.PI / 6),\n      y1 - headlen * Math.sin(angle + squish - Math.PI / 6),\n    ];\n    const leftCorner = [ // right corner of the arrow head\n      x1 - headlen * Math.cos(angle - squish + Math.PI / 6),\n      y1 - headlen * Math.sin(angle - squish + Math.PI / 6),\n    ];\n    ctx.save();\n    ctx.strokeStyle = options.color;\n    ctx.fillStyle = options.color;\n    ctx.beginPath();\n    // line\n    ctx.lineWidth = 3;\n    ctx.moveTo(x0, y0);\n    ctx.lineTo(x1, y1);\n    ctx.stroke();\n    // arrow head\n    ctx.lineWidth = 1;\n    ctx.beginPath();\n    ctx.moveTo(leftCorner[0], leftCorner[1]);\n    ctx.lineTo(x1, y1);\n    ctx.lineTo(rightCorner[0], rightCorner[1]);\n    ctx.lineTo(leftCorner[0], leftCorner[1]);\n    ctx.lineTo(x1, y1);\n    ctx.stroke();\n    ctx.fill();\n    ctx.restore();\n  }\n\n  /**\n   * Draw a matrix as a linear transformation of a graph.\n   */\n  function drawMatrix(value: math.Matrix, options: DrawOptions) {\n    drawGraph(canvas, ctx, step, stepPx, value, options);\n  }\n\n  /**\n   * Returns an animation function that draws a frame of a matrix-like expression\n   * (matrices and determinants) according to a callback function `draw`\n   * (passed to `animateExpr`)\n   */\n  function matrixFrame(\n    initial: math.Matrix, // initial matrix where the animation starts\n    final: math.Matrix, // final matrix where the animation ends\n    duration: number, // duration of the animation in ms\n    options: DrawOptions,\n    draw: (matrix: math.Matrix, options: DrawOptions) => void, // callback to draw each frame\n  ) {\n    return (elapsed: number) => {\n      // difference between final and initial state\n      const diff = math.subtract(final, initial);\n      // fraction of the difference proportional to the time elapsed\n      const dt = math.multiply(diff, easeInOutCubic(elapsed / duration));\n      // animate by incrementing the current state by a fraction of the difference\n      const mat = math.add(initial, dt) as math.Matrix;\n      clear(canvas, ctx);\n      drawGraph(canvas, ctx, step, stepPx);\n      drawExpressions(canvas, ctx, exprs, step, stepPx, zoomFactor);\n      draw(mat, options);\n    };\n  }\n\n  function drawEigenvectors(eigenvectors: math.Matrix, options: DrawOptions) {\n    const v1 = [eigenvectors.get([0, 0]), eigenvectors.get([1, 0])];\n    const v2 = [eigenvectors.get([0, 1]), eigenvectors.get([1, 1])];\n    const maxCoord = math.multiply(\n      Math.floor(boundingBox(canvas, ctx).max() / stepPx) + 1,\n      step,\n    ) as number;\n    [v1, v2].forEach((vector) => {\n      const numVectors = maxCoord / Math.max(...vector.map(Math.abs)) * zoomFactor + 1;\n      const [x, y] = vector.map((component) => component / zoomFactor);\n      for (let i = 1; i < numVectors; ++i) {\n        drawVector(0, 0, x * i, y * i, options);\n        drawVector(0, 0, -x * i, -y * i, options);\n      }\n    });\n  }\n\n  function drawDeterminant(matrix: math.Matrix, options: DrawOptions) {\n    const unitPx = pxPerUnit(step, stepPx);\n    // corners of a unit square at (0,0)\n    const squareCorners = [[1, 0], [1, 1], [0, 1]];\n    // corners of the transformed unit square (whose area represents the determinant)\n    const detCorners = squareCorners.map((p) => math.multiply(matrix, p));\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    detCorners.forEach((p) => ctx.lineTo(p.get([0]) * unitPx, -p.get([1]) * unitPx));\n    ctx.closePath();\n    ctx.save();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = options.color;\n    ctx.stroke();\n    ctx.globalAlpha = 0.4;\n    ctx.fillStyle = options.color;\n    ctx.fill();\n    ctx.restore();\n  }\n\n  exprs.forEach((exprData) => {\n    const {\n      id,\n      color,\n      evaluatedValue,\n      type,\n      lastFn,\n      lastArgs,\n      showCoords,\n      showMinor,\n      animationState,\n      animationDuration,\n      visible,\n    } = exprData;\n    const drawOptions = {\n      color,\n      showCoords,\n      showMinor,\n      visible,\n    };\n    const drawAnimation = animationState === AnimationState.Requesting && animateExpr !== undefined;\n    const drawStatic = animationState === AnimationState.Paused;\n    if (!evaluatedValue) {\n      return;\n    }\n    // convert MathJS value to ordinary JS object\n    const jsValue = evaluatedValue.valueOf();\n    if (type === 'Matrix') {\n      // evaluatedValue is a math.Matrix\n      if (lastFn === 'eigenvectors') {\n        // the matrix represents eigenvectors\n        if (drawAnimation) {\n          animateExpr!(\n            id,\n            matrixFrame(\n              normalizeMatrix(evaluatedValue),\n              evaluatedValue,\n              animationDuration,\n              drawOptions,\n              drawEigenvectors,\n            ),\n          );\n        } else if (drawStatic) {\n          drawEigenvectors(evaluatedValue, drawOptions);\n        }\n      } else if (isMatrix(evaluatedValue, 2)) {\n        // the matrix represents a general transformation matrix\n        if (drawAnimation) {\n          // start the animation of the transformation matrix\n          // animateExpr is non-null since animate === true\n          animateExpr!(\n            id,\n            matrixFrame(\n              math.identity(2) as math.Matrix,\n              evaluatedValue,\n              animationDuration,\n              drawOptions,\n              drawMatrix,\n            ),\n          );\n        } else if (drawStatic) {\n          // draw a static transformation matrix on the graph\n          drawMatrix(jsValue, drawOptions);\n        }\n      }\n    } else if (type === 'Vector') {\n      // evaluatedValue is a n x 1 math.Matrix\n      if (isVector(evaluatedValue, 2) && lastFn !== 'eigenvalues') {\n        // the vector represents a 2D space vector\n        drawVector(0, 0, jsValue[0], jsValue[1], drawOptions);\n      }\n    } else if (type === 'number' || type === 'BigNumber') {\n      // evaluatedValue is a number\n      if (lastFn === 'det') {\n        // the number represents the determinant of a matrix\n        const matrix = lastArgs[0]; // argument to `det` (matrix with determinant = evaluatedValue)\n        if (drawAnimation) {\n        // start the animation of the determinant\n          // animateExpr is non-null since animate === true\n          animateExpr!(\n            id,\n            matrixFrame(\n              math.identity(2) as math.Matrix,\n              matrix,\n              animationDuration,\n              drawOptions,\n              drawDeterminant,\n            ),\n          );\n        } else if (drawStatic) {\n          // draw static determinant\n          drawDeterminant(matrix, drawOptions);\n        }\n      }\n    }\n  });\n}\n\nexport {\n  drawGraph,\n  drawExpressions,\n  setOrigin,\n  clear,\n  setBackground,\n};\n","import React from 'react';\n\n/**\n * Get a position and callback functions for moving the position on click+drag.\n * @param initialPos the initial position of the element\n */\nexport default function useDraggablePosition(\n  initialPos = { x: 0, y: 0 },\n  minimum = { x: -Infinity, y: -Infinity },\n  maximum = { x: Infinity, y: Infinity },\n) {\n  const [position, setPosition] = React.useState({ x: initialPos.x, y: initialPos.y });\n  const isDragging = React.useRef(false);\n  const startPos = React.useRef({ x: 0, y: 0 });\n\n  function onDragMove(e: MouseEvent) {\n    if (!isDragging) {\n      return;\n    }\n    const dx = e.clientX - startPos.current.x;\n    const dy = e.clientY - startPos.current.y;\n    startPos.current.x = e.clientX;\n    startPos.current.y = e.clientY;\n    setPosition((oldPos) => {\n      const newX = Math.min(Math.max(oldPos.x + dx, minimum.x), maximum.x);\n      const newY = Math.min(Math.max(oldPos.y + dy, minimum.y), maximum.y);\n      return {\n        x: newX,\n        y: newY,\n      };\n    });\n  }\n  function onDragEnd() {\n    isDragging.current = false;\n    window.removeEventListener('mouseup', onDragEnd);\n    window.removeEventListener('mousemove', onDragMove);\n  }\n  function onDragStart(e: React.MouseEvent) {\n    isDragging.current = true;\n    startPos.current.x = e.clientX;\n    startPos.current.y = e.clientY;\n    window.addEventListener('mouseup', onDragEnd);\n    window.addEventListener('mousemove', onDragMove);\n  }\n\n  return {\n    position,\n    setPosition,\n    onDragStart,\n  };\n}\n","import React from 'react';\nimport * as math from 'mathjs';\n\nimport {\n  drawGraph,\n  drawExpressions,\n  setOrigin as setCanvasOrigin,\n  setBackground,\n  clear,\n} from 'utils/draw';\nimport useDraggablePosition from 'hooks/useDraggablePosition';\n\nimport { ExprData } from 'hooks/useExprs';\n\n/**\n * Returns true if x can be represented as y * 10^n where n is an integer.\n */\nfunction isMagnitude(x: number | math.BigNumber, y: number | math.BigNumber) {\n  const n = math.log10(math.divide(x, y) as math.BigNumber);\n  return math.isInteger(n);\n}\n\nfunction wrapNum(x: number, min: number, max: number) {\n  const d = max - min;\n  return ((x - min) % d + d) % d + min;\n}\n\nfunction canvasMousePos(canvas: HTMLCanvasElement, ev: React.MouseEvent) {\n  const rect = canvas.getBoundingClientRect();\n  const x = ev.clientX - rect.left;\n  const y = ev.clientY - rect.top;\n  return { x, y };\n}\n\ninterface GraphProps {\n  width: number,\n  height: number,\n  exprs: ExprData[],\n  animateExpr: (id: number, drawFrame: (elapsed: number) => void) => void,\n}\n\nexport interface ImperativeCanvasRef {\n  // Prompt a download of the currently visible graph as a PNG\n  exportGraphPNG: () => void;\n  // Center the graph at the origin\n  centerGraph: () => void;\n  /* DEPRECATED: Graph options\n  // Current graph options\n  currentOptions: DrawOptions,\n  // Modify visual graph options\n  setOptions: (options: Partial<DrawOptions>) => void;\n  */\n}\n\nconst Graph = React.forwardRef<ImperativeCanvasRef, GraphProps>((\n  {\n    width,\n    height,\n    exprs,\n    animateExpr,\n  }: GraphProps,\n  forwardedRef,\n) => {\n  // canvas reference\n  const canvasRef = React.useRef<HTMLCanvasElement | null>(null);\n  const ctxRef = React.useRef<CanvasRenderingContext2D | null>(null);\n\n  // We can't access DOM elements (including the canvas) after the first render using\n  // a reference because when our effect hooks are defined, the reference is initialized to null.\n  // To re-run effect hooks when the canvas ref is finally set for the first time,\n  // we use a state flag that will be passed to the effect hooks dependency array.\n  const [canvasInitialized, setCanvasInitialized] = React.useState(false);\n\n  /* DEPRECATED: Graph options\n  // visual options\n  const [options, setOptions] = React.useState<DrawOptions>({\n    showMinor: true,\n    showCoords: true,\n    color: '#000000',\n    visible: true,\n  });\n  */\n\n  // axis scales state variables\n  const minStepPx = 100; // minimum px per step (smaller than this and new substeps are drawn)\n  const [step, setStep] = React.useState(math.bignumber(1));\n  const [stepPx, setStepPx] = React.useState(minStepPx);\n\n  // panning state variables\n  const {\n    position: origin,\n    setPosition: setOrigin,\n    onDragStart,\n  } = useDraggablePosition({ x: width / 2, y: height / 2 });\n\n  // zoom factor reference\n  const zoomFactor = React.useRef(1);\n\n  // Assign the forwarded ref with the associated functions\n  React.useImperativeHandle(forwardedRef, () => ({\n    // Download the graph as a PNG file\n    exportGraphPNG: () => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n      const ctx = ctxRef.current;\n      if (!ctx) return;\n      // need to set background color to white, otherwise the image is transparent\n      setBackground(canvas, ctx, 'white');\n      const url = canvas.toDataURL('image/png');\n      const link = document.createElement('a');\n      link.download = 'mitras-graph.png';\n      link.href = url;\n      link.click();\n    },\n\n    centerGraph: () => setOrigin({ x: width / 2, y: height / 2 }),\n\n    /* DEPRECATED: Graph options\n\n    currentOptions: options,\n\n    // update state object containing graph options\n    setOptions: (newOptions: Partial<DrawOptions>) => setOptions(\n      (oldOptions) => ({ ...oldOptions, ...newOptions }),\n    ),\n    */\n  }));\n\n  /**\n   * Called when we can access the canvas for the first time\n   * (ref object has been assigned to the canvas)\n   */\n  // we use a callback here because the function is passed to a ref\n  // https://github.com/facebook/react/issues/9328#issuecomment-291654761\n  const onCanvasInitialized = React.useCallback((canvas: HTMLCanvasElement) => {\n    canvasRef.current = canvas;\n    ctxRef.current = canvas.getContext('2d');\n    setCanvasInitialized(true);\n  }, [canvasRef]);\n\n  /**\n   * Adjust the step and stepPx according to the scroll to create a zooming effect.\n   * (this works but please clean it up later)\n   */\n  function onZoom(e: React.WheelEvent) {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const scroll = -e.deltaY * 0.1;\n    const zoomingIn = scroll > 0;\n    let nextStepPx = stepPx + scroll;\n    let nextStep = step;\n    // choose a factor by which to increase/decrease the step that keeps \"nice\" looking numbers\n    // e.g. 1 -> 0.5 -> 0.2 -> 0.1 instead of 1 -> 0.5 -> 0.25 -> 0.125\n    const factor = zoomingIn\n      ? isMagnitude(step, 5) ? 5 / 2 : 2\n      : isMagnitude(step, 2) ? 5 / 2 : 2;\n    const maxStepPx = minStepPx * factor;\n    if (zoomingIn && nextStepPx >= maxStepPx) {\n      nextStepPx = wrapNum(nextStepPx, minStepPx, maxStepPx);\n      nextStep = math.divide(step, factor) as math.BigNumber;\n      zoomFactor.current *= factor;\n    } else if (!zoomingIn && nextStepPx < minStepPx) {\n      nextStepPx = wrapNum(nextStepPx, minStepPx, maxStepPx);\n      nextStep = math.multiply(step, factor) as math.BigNumber;\n      zoomFactor.current /= factor;\n    }\n    // adjust the origin so the graph zooms in/out centered at the mouse position\n    const { x: mouseX, y: mouseY } = canvasMousePos(canvas, e);\n    const unitPx = math.divide(stepPx, step) as number;\n    const nextUnitPx = math.divide(nextStepPx, nextStep) as number;\n    const deltaUnitPx = nextUnitPx - unitPx;\n    const dx = (mouseX - origin.x) / unitPx * deltaUnitPx;\n    const dy = (mouseY - origin.y) / unitPx * deltaUnitPx;\n    setOrigin((old) => ({\n      x: old.x - dx,\n      y: old.y - dy,\n    }));\n    setStep(nextStep);\n    setStepPx(nextStepPx);\n  }\n\n  /**\n   * Update the canvas pan/zoom/dimensions/expressions\n   */\n  React.useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    ctxRef.current = canvas.getContext('2d');\n    const ctx = ctxRef.current;\n    if (!ctx) return;\n\n    // update canvas dimensions to controlled dimension\n    canvas.width = width;\n    canvas.height = height;\n\n    // redraw graph with new pan/zoom/expressions\n    clear(canvas, ctx);\n    setCanvasOrigin(ctx, origin.x, origin.y);\n    drawGraph(canvas, ctx, step, stepPx);\n    drawExpressions(canvas, ctx, exprs, step, stepPx, zoomFactor.current, animateExpr);\n  }, [canvasInitialized, canvasRef, width, height, exprs, origin, step, stepPx, animateExpr]);\n\n  return (\n    <canvas\n      id=\"graph\"\n      ref={onCanvasInitialized}\n      onMouseDown={onDragStart} // panning\n      onWheel={onZoom}\n    />\n  );\n});\n\nexport default Graph;\n","import React from 'react';\n\nimport {\n  DoubleArrow as DoubleArrowIcon,\n} from '@mui/icons-material';\nimport { IconButton } from '@mui/material';\n\nimport 'styles/Sidebar.css';\n\ntype Element = React.ReactElement[] | React.ReactElement | null;\n\nexport interface SidebarProps {\n  children: Element;\n  header: Element;\n  width: number;\n  height: number;\n  setWidth: (width: number) => void,\n  onResizerClick: (this: HTMLElement, e: React.MouseEvent) => void;\n}\n\nexport default function Sidebar({\n  children,\n  header,\n  width,\n  height,\n  setWidth,\n  onResizerClick, // called when the resizer is clicked to start resizing\n}: SidebarProps) {\n  const sidebarHidden = width <= 0;\n  const showSidebarButton = sidebarHidden && (\n    <IconButton\n      className=\"show-sidebar\"\n      onClick={() => setWidth(300)}\n    >\n      <DoubleArrowIcon />\n    </IconButton>\n  );\n  return (\n    <>\n      <div className=\"sidebar\" style={{ width, height }}>\n        <div className=\"sidebar-header\">\n          {header}\n        </div>\n        <div className=\"sidebar-contents\">\n          {children}\n        </div>\n      </div>\n      <div\n        style={{ height }}\n        className=\"resizer\"\n        role=\"presentation\"\n        onMouseDown={onResizerClick}\n      />\n      {showSidebarButton}\n    </>\n  );\n}\n","import React from 'react';\n\nconst { MQ } = window; // MathQuill\n\nexport interface MathInputProps {\n  latex: string, // LaTeX string of the current MathInput\n  latexToInsert: string, // LaTeX to insert into the MathInput at the current cursor\n  onChange: (latex: string) => void,\n  onFocus: () => void,\n}\n\nexport default function MathInput({\n  latex,\n  latexToInsert,\n  onChange,\n  onFocus,\n}: MathInputProps) {\n  const input = React.useRef<HTMLDivElement>(null); // input to be transformed to MQ input\n  const mathInput = React.useRef<any>(null); // MQ input created from `inputRef`\n\n  // initialize the input as a MathQuill input\n  React.useEffect(() => {\n    mathInput.current = MQ.MathField(input.current, {\n      handlers: {\n        edit: (mathField: any) => onChange(mathField.latex()),\n      },\n    });\n  }, [onChange]);\n\n  // Insert `latexToInsert`\n  React.useEffect(() => {\n    if (!mathInput.current) {\n      return;\n    }\n    mathInput.current.write(latexToInsert);\n  }, [latexToInsert]);\n\n  React.useEffect(() => {\n    const mathField = mathInput.current;\n    if (mathField && mathField.latex() !== latex) {\n      mathField.latex(latex);\n    }\n  }, [latex]);\n\n  return (\n    <div\n      className=\"expression-input\"\n      ref={input}\n      onFocus={onFocus}\n    />\n  );\n}\n","import React from 'react';\n\nimport {\n  Checkbox,\n  FormControlLabel,\n  MenuItem,\n} from '@mui/material';\nimport { Color, ColorPicker } from 'material-ui-color';\n\nimport PopoverIconMenu from 'components/generic/PopoverIconMenu';\n\ninterface ExprMenuProps {\n  icon: React.ReactElement;\n  color: { value: string, onChange: (color: string) => void };\n  visible: { value: boolean, onChange: (visible: boolean) => void };\n  showMinor?: { value: boolean, onChange: (showMinor: boolean) => void };\n  showCoords?: { value: boolean, onChange: (showCoords: boolean) => void };\n}\n\nexport default function ExprMenu({\n  icon,\n  color,\n  visible,\n  showMinor,\n  showCoords,\n}: ExprMenuProps) {\n  // material-ui-color ColorPicker returns a custom Color object, so we\n  // extract the desired 7-digit hex string before calling the passed callback\n  function onMaterialColorChange(materialColor: Color) {\n    color.onChange(`#${materialColor.hex}`);\n  }\n\n  function onToggleVisibility(ev: React.ChangeEvent<HTMLInputElement>) {\n    visible.onChange(ev.target.checked);\n  }\n\n  function onShowMinorChange(ev: React.ChangeEvent<HTMLInputElement>) {\n    showMinor?.onChange(ev.target.checked);\n  }\n\n  function onShowCoordsChange(ev: React.ChangeEvent<HTMLInputElement>) {\n    showCoords?.onChange(ev.target.checked);\n  }\n\n  const colorOption = (\n    <MenuItem>\n      <ColorPicker\n        value={color.value}\n        onChange={onMaterialColorChange}\n      />\n    </MenuItem>\n  );\n\n  const visibleOption = (\n    <MenuItem>\n      <FormControlLabel\n        control={(\n          <Checkbox\n            checked={visible.value}\n            onChange={onToggleVisibility}\n            name=\"toggle-visibility\"\n          />\n            )}\n        label=\"Visible\"\n      />\n    </MenuItem>\n  );\n\n  const showMinorOption = showMinor !== undefined && (\n    <MenuItem>\n      <FormControlLabel\n        control={(\n          <Checkbox\n            checked={showMinor.value}\n            onChange={onShowMinorChange}\n            name=\"toggle-show-minor\"\n          />\n          )}\n        label=\"Show Minor Gridlines\"\n      />\n    </MenuItem>\n  );\n\n  const showCoordsOption = showCoords !== undefined && (\n    <MenuItem>\n      <FormControlLabel\n        control={(\n          <Checkbox\n            checked={showCoords.value}\n            onChange={onShowCoordsChange}\n            name=\"toggle-show-coords\"\n          />\n          )}\n        label=\"Show Coordinates\"\n      />\n    </MenuItem>\n  );\n\n  return (\n    <PopoverIconMenu icon={icon}>\n      {colorOption}\n      {visibleOption}\n      {showCoordsOption}\n      {showMinorOption}\n    </PopoverIconMenu>\n  );\n}\n","import React from 'react';\nimport { TextField, Slider as MuiSlider } from '@mui/material';\n\nimport 'styles/Slider.css';\n\nimport { ExprSliderOptionChangeFunc, ExprSliderOption } from 'hooks/useExprs';\n\nconst { MQ } = window; // MathQuill\n\ninterface SliderProps {\n  min: number;\n  max: number;\n  step: number;\n  focused: boolean;\n  variable: string; // variable whose value is being controlled by this slider\n  onChange: (newValue: number) => void;\n  onOptionChange: ExprSliderOptionChangeFunc;\n}\n\nexport default function Slider({\n  min,\n  max,\n  step,\n  focused,\n  variable,\n  onChange,\n  onOptionChange,\n} : SliderProps) {\n  const staticMath = React.useRef<HTMLSpanElement>(null);\n  // Mui slider calls onChange everytime the mouse moves instead of\n  // when the value actually changes, so we keep track of the last value\n  // to call onChange only when the value actually changes\n  const oldValue = React.useRef<number>(0);\n\n  React.useEffect(() => {\n    MQ.StaticMath(staticMath.current);\n  });\n\n  /**\n   * Returns a callback function that can be passed to an input that will update\n   * the appropriate slider option using `onOptionChange`\n   */\n  function onOptionInputChange(option: ExprSliderOption) {\n    return (ev: React.ChangeEvent<HTMLInputElement>) => onOptionChange(\n      option,\n      Number(ev.currentTarget.value),\n    );\n  }\n\n  function onMuiSliderChange(event: Event, newValue: number | number[]) {\n    if (newValue === oldValue.current) return;\n    onChange(newValue as number);\n    oldValue.current = newValue as number;\n  }\n\n  const numberInputProps = {\n    variant: 'standard' as 'standard',\n    type: 'number',\n    className: 'slider-control',\n  };\n  const sliderJSX = focused\n    ? (\n      <div className=\"slider-controls\">\n        <TextField\n          {...numberInputProps}\n          defaultValue={min}\n          onChange={onOptionInputChange('sliderMin')}\n        />\n        <span ref={staticMath}>{`\\\\leq ${variable} \\\\leq`}</span>\n        <TextField\n          {...numberInputProps}\n          defaultValue={max}\n          onChange={onOptionInputChange('sliderMax')}\n        />\n        Step:\n        <TextField\n          {...numberInputProps}\n          defaultValue={step}\n          onChange={onOptionInputChange('sliderStep')}\n        />\n      </div>\n    )\n    : (\n      <>\n        <span>{min}</span>\n        <MuiSlider\n          className=\"slider\"\n          onChange={onMuiSliderChange}\n          valueLabelDisplay=\"auto\"\n          step={step}\n          min={min}\n          max={max}\n        />\n        <span>{max}</span>\n      </>\n    );\n  return <div className=\"slider-container\">{sliderJSX}</div>;\n}\n","import React from 'react';\n\nimport { IconButton, InputBase } from '@mui/material';\nimport {\n  Clear as ClearIcon,\n  FormatQuote as FormatQuoteIcon,\n  SlowMotionVideo as SlowMotionVideoIcon,\n  Settings as SettingsIcon,\n} from '@mui/icons-material';\nimport { DraggableProvidedDragHandleProps } from 'react-beautiful-dnd';\n\nimport MathInput from 'components/MathInput';\nimport ExprMenu from 'components/ExprMenu';\nimport Slider from 'components/Slider';\nimport {\n  ExprData,\n  ExprOptionChangeFunc,\n  ExprSliderOptionChangeFunc,\n} from 'hooks/useExprs';\n\nimport 'styles/Expr.css';\n\nexport interface ExprProps {\n  focused: boolean,\n  exprData: ExprData,\n  // callbacks unique to every expression\n  callbacks: {\n    input: (tex: string) => void,\n    focus: () => void,\n    delete: () => void,\n    animate: () => void,\n    optionChange: ExprOptionChangeFunc,\n    sliderOptionChange: ExprSliderOptionChangeFunc,\n  }\n  // props to be passed to the drag handle (to make Expr drag-and-droppable)\n  dragHandleProps?: DraggableProvidedDragHandleProps\n}\n\nconst { MQ } = window; // MathQuill\n\n/**\n * Component for an expression in the expression list\n */\nexport default function Expr({\n  focused,\n  exprData,\n  dragHandleProps,\n  callbacks,\n}: ExprProps) {\n  const evaluated = React.useRef<HTMLDivElement>(null);\n  // the `focused` prop indicates that this expression was the last to have focus,\n  // meanwhile `hasCursor` indicates that the expression actually has focus\n  const [hasCursor, setHasCursor] = React.useState(false);\n\n  // render the evaluated expression\n  React.useEffect(() => {\n    if (!evaluated.current) {\n      return;\n    }\n    MQ.StaticMath(evaluated.current);\n  }, [exprData.evaluatedTex]);\n\n  // Flag indicating if this expression should have a slider\n  // (assignment expressions that assign to a number)\n  const isSlider = exprData.isAssignment && exprData.type === 'number';\n\n  // Get the variable that this expression is assigning to (if it is an assignment expression)\n  function getAssignmentVar() {\n    if (!exprData.isAssignment) {\n      return '';\n    }\n    const [variable] = exprData.tex.split('=', 1);\n    return variable;\n  }\n\n  // Callback to update the TeX of the expression if changed by a slider\n  function onSliderChange(newValue: number) {\n    const variable = getAssignmentVar();\n    callbacks.input(`${variable}=${newValue}`);\n  }\n\n  // Slider component for the expression\n  const exprSlider = isSlider && (\n    <Slider\n      min={exprData.sliderMin}\n      max={exprData.sliderMax}\n      step={exprData.sliderStep}\n      focused={hasCursor}\n      variable={getAssignmentVar()}\n      onChange={onSliderChange}\n      onOptionChange={callbacks.sliderOptionChange}\n    />\n  );\n\n  // Flag indicating if the evaluated expression should be shown\n  const exprHasEvaluation = exprData.evaluatedTex !== '' && !isSlider;\n\n  // Component displaying the evaluated expression\n  const exprEvaluated = exprHasEvaluation && (\n    <div\n      ref={evaluated}\n      className=\"expression-evaluated\"\n      style={{ color: exprData.color }}\n    >\n      {exprData.evaluatedTex}\n    </div>\n  );\n\n  const isComment = exprData.type === 'string';\n  const isMatrix = exprData.type === 'Matrix' && exprData.lastFn !== 'eigenvectors';\n  const isVector = exprData.type === 'Vector' && exprData.lastFn !== 'eigenvalues';\n  const isEigenvectors = exprData.lastFn === 'eigenvectors';\n  const isDeterminant = exprData.lastFn === 'det';\n\n  // Flag indicating whether or not the evaluated expression is animatable\n  const isAnimatable = isMatrix || isDeterminant;\n\n  // Flag indicating whether or not the evaluated expression is drawable\n  // (not numbers, strings, etc.)\n  const isDrawable = isMatrix || isDeterminant || isEigenvectors || isVector;\n\n  // Options to show for any expression whose evaluation is drawable\n  // (vectors, matrices, determinants, etc.)\n  const baseMenuOptions = {\n    color: {\n      value: exprData.color,\n      onChange: (color: string) => callbacks.optionChange('color', color),\n    },\n    visible: {\n      value: exprData.visible,\n      onChange: (visible: boolean) => callbacks.optionChange('visible', visible),\n    },\n  };\n\n  // Options to show if the expression is a matrix\n  const matrixMenuOptions = {\n    showCoords: {\n      value: exprData.showCoords,\n      onChange: (showCoords: boolean) => callbacks.optionChange('showCoords', showCoords),\n    },\n    showMinor: {\n      value: exprData.showMinor,\n      onChange: (showMinor: boolean) => callbacks.optionChange('showMinor', showMinor),\n    },\n  };\n\n  // Eigenvectors aren't matrices but MathJS interprets them as such:\n  // we don't show matrix options for eigenvectors (they are drawn differently)\n  const showMatrixOptions = (exprData.type === 'Matrix' && exprData.lastFn !== 'eigenvectors');\n\n  const settingsIconColor = {\n    color: exprData.visible ? 'inherit' as const : 'disabled' as const,\n    htmlColor: exprData.visible ? exprData.color : undefined,\n  };\n\n  // Component for the tab on the left of the expression\n  const exprTab = (\n    <div\n      className=\"expression-tab\"\n      {...dragHandleProps}\n    >\n      {isDrawable && (\n        <ExprMenu\n          icon={<SettingsIcon {...settingsIconColor} />}\n          {...baseMenuOptions}\n          {...(showMatrixOptions && matrixMenuOptions)}\n        />\n      )}\n      {isAnimatable && (\n        <IconButton\n          className=\"expression-animate\"\n          onClick={callbacks.animate}\n        >\n          <SlowMotionVideoIcon />\n        </IconButton>\n      )}\n      {isComment && (\n        <FormatQuoteIcon />\n      )}\n    </div>\n  );\n\n  const onInputBaseChange = (ev: React.ChangeEvent<HTMLTextAreaElement>) => {\n    callbacks.input(ev.target.value);\n  };\n\n  const onFocus = () => {\n    setHasCursor(true);\n    callbacks.focus();\n  };\n\n  const onBlur = (ev: React.FocusEvent<HTMLDivElement>) => {\n    // only consider the expression blurred if the newly focused element is\n    // not a child of the expression\n    if (!ev.currentTarget.contains(ev.relatedTarget as Node)) {\n      setHasCursor(false);\n    }\n  };\n\n  const exprInput = isComment\n    ? (\n      <InputBase\n        className=\"expression-input expression-text-input\"\n        multiline\n        value={exprData.tex}\n        onChange={onInputBaseChange}\n        onFocus={onFocus}\n      />\n    ) : (\n      <MathInput\n        latex={exprData.tex}\n        latexToInsert={exprData.texToInsert}\n        onChange={callbacks.input}\n        onFocus={onFocus}\n      />\n    );\n\n  return (\n    <div\n      className={`expression${focused ? ' focused' : ''}`}\n      onBlur={onBlur}\n    >\n      {exprTab}\n      <div className={`expression-main${isSlider ? ' slider' : ''}`}>\n        {exprInput}\n        {exprEvaluated}\n        {exprSlider}\n      </div>\n      <IconButton\n        className=\"expression-delete\"\n        onClick={callbacks.delete}\n      >\n        <ClearIcon />\n      </IconButton>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport {\n  DragDropContext,\n  Droppable,\n  DroppableProvided,\n  Draggable,\n  DraggableProvided,\n  DropResult,\n} from 'react-beautiful-dnd';\n\nimport Expr from 'components/Expr';\nimport { ExprData, ExprOptionChangeFunc, ExprSliderOptionChangeFunc } from 'hooks/useExprs';\n\nexport interface ExprListProps {\n  exprs: ExprData[];\n  // the currently focused expression\n  focusedID: number;\n  // function to swap the position of 2 expressions in the list\n  reorderExprs: (idx1: number, idx2: number) => void;\n  // function to generate callbacks for an expression of the specified ID\n  generateCallbacks: (id: number) => {\n    input: (tex: string) => void,\n    focus: () => void,\n    delete: () => void,\n    animate: () => void,\n    optionChange: ExprOptionChangeFunc,\n    sliderOptionChange: ExprSliderOptionChangeFunc,\n  }\n}\n\nexport default function ExprList({\n  exprs,\n  focusedID,\n  reorderExprs,\n  generateCallbacks,\n}: ExprListProps) {\n  // drag-and-drop reorder handler\n  function onDragEnd(result: DropResult) {\n    // dropped outside the list\n    if (!result.destination) {\n      return;\n    }\n    reorderExprs(result.source.index, result.destination.index);\n  }\n\n  // generate <Expr /> components from stateful expression data `exprs`\n  const exprComponents = (\n    <>\n      {exprs.map((exprData, idx) => {\n        const { id } = exprData;\n        const idStr = id.toString();\n        return (\n          <Draggable key={idStr} draggableId={idStr} index={idx}>\n            {(provided: DraggableProvided) => (\n              <div\n                ref={provided.innerRef}\n                {...provided.draggableProps}\n              >\n                <Expr\n                  focused={id === focusedID}\n                  exprData={exprData}\n                  dragHandleProps={provided.dragHandleProps}\n                  callbacks={generateCallbacks(id)}\n                  key={id}\n                />\n              </div>\n            )}\n          </Draggable>\n        );\n      })}\n    </>\n  );\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"droppable-exprs\">\n        {(provided: DroppableProvided) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.droppableProps}\n          >\n            {exprComponents}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n","import React from 'react';\n\nimport { IconButton } from '@mui/material';\nimport { AddOutlined } from '@mui/icons-material';\n\nexport default function NewExpression({ onClick }: { onClick: () => void }) {\n  function handleKeyDown(ev: React.KeyboardEvent) {\n    if (ev.key === 'Enter') {\n      onClick();\n    }\n  }\n  return (\n    <IconButton\n      className=\"expression-new\"\n      role=\"button\"\n      aria-label=\"New Expression\"\n      tabIndex={0}\n      onClick={onClick}\n      onKeyDown={handleKeyDown}\n    >\n      <AddOutlined />\n    </IconButton>\n  );\n}\n","import React from 'react';\n\nconst { MQ } = window; // MathQuill\n\ninterface TexButtonProps {\n  tex: string,\n  onClick: (e: React.MouseEvent) => void,\n  className?: string\n}\n\nexport default function TexButton({ tex, onClick, className }: TexButtonProps) {\n  const button = React.useRef<HTMLButtonElement>(null);\n  React.useEffect(() => {\n    MQ.StaticMath(button.current);\n  });\n  return (\n    <button\n      ref={button}\n      className={className}\n      type=\"button\"\n      onClick={onClick}\n    >\n      {tex}\n    </button>\n  );\n}\n","import React from 'react';\n\nimport {\n  Keyboard as KeyboardIcon,\n  KeyboardHide as KeyboardHideIcon,\n} from '@mui/icons-material';\nimport { Button, Drawer } from '@mui/material';\n\nimport 'styles/Keypad.css';\n\nimport TexButton from 'components/TexButton';\n\n// generate LaTeX for a matrix with specified rows and columns\nfunction matrixTex(rows: number, cols: number) {\n  const row = '&'.repeat(cols - 1);\n  let mat = '';\n  if (row === '') {\n    mat = '\\\\\\\\'.repeat(rows - 1);\n  } else {\n    mat = Array(rows).fill(row).join('\\\\\\\\');\n  }\n  return `\\\\begin{bmatrix}${mat}\\\\end{bmatrix}`;\n}\n\nexport interface KeypadProps {\n  // controlled props\n  keypadVisible: boolean;\n  setKeypadVisible: React.Dispatch<React.SetStateAction<boolean>>;\n  // callback to insert specified tex into the focused expression\n  insertTex: (tex: string) => void;\n}\n\nexport default function Keypad({ keypadVisible, setKeypadVisible, insertTex }: KeypadProps) {\n  function toggleKeypad() {\n    setKeypadVisible((current) => !current);\n  }\n\n  const toggleKeypadButton = (\n    <Button\n      className={keypadVisible ? 'keypad-hide' : 'keypad-show'}\n      onClick={toggleKeypad}\n      variant=\"contained\"\n      color=\"primary\"\n      style={keypadVisible ? { backgroundColor: '#ededed', color: 'gray' } : {}}\n    >\n      {\n        keypadVisible\n          ? <KeyboardHideIcon fontSize=\"large\" />\n          : <KeyboardIcon fontSize=\"large\" />\n      }\n    </Button>\n  );\n\n  const matrixButtons = [\n    matrixTex(2, 1),\n    matrixTex(3, 1),\n    matrixTex(2, 2),\n    matrixTex(3, 3),\n  ].map((tex) => (\n    <TexButton\n      className=\"tex-button matrix-button\"\n      tex={tex}\n      onClick={() => insertTex(tex)}\n    />\n  ));\n\n  const matrixFunctionButtons = [\n    '\\\\operatorname{norm}',\n    '\\\\operatorname{inv}',\n    '\\\\operatorname{proj}',\n    '\\\\operatorname{comp}',\n    '\\\\det',\n    '\\\\operatorname{cross}',\n    '\\\\operatorname{eigenvectors}',\n    '\\\\operatorname{eigenvalues}',\n  ].map((tex) => (\n    <TexButton\n      className=\"tex-button matrix-function-button\"\n      tex={tex}\n      onClick={() => insertTex(tex)}\n    />\n  ));\n\n  const functionButtons = [\n    '\\\\sin',\n    '\\\\csc',\n    '\\\\cos',\n    '\\\\sec',\n    '\\\\tan',\n    '\\\\cot',\n    '\\\\log',\n    '\\\\ln',\n  ].map((tex) => (\n    <TexButton\n      className=\"tex-button function-button\"\n      tex={tex}\n      onClick={() => insertTex(tex)}\n    />\n  ));\n\n  return (\n    <div className=\"keypad\">\n      {toggleKeypadButton}\n      <Drawer\n        classes={{ paper: 'keypad-drawer' }}\n        anchor=\"bottom\"\n        open={keypadVisible}\n        onClose={toggleKeypad}\n        variant=\"persistent\"\n      >\n        <div className=\"keypad-group matrix-buttons\">\n          {matrixButtons}\n        </div>\n        <div className=\"keypad-group matrix-function-buttons\">\n          {matrixFunctionButtons}\n        </div>\n        <div className=\"keypad-group function-buttons\">\n          {functionButtons}\n        </div>\n      </Drawer>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { Button } from '@mui/material';\nimport { Home as HomeIcon } from '@mui/icons-material';\n\ninterface GraphControlProps {\n  centerGraph: () => void;\n}\n\nexport default function GraphControls({ centerGraph }: GraphControlProps) {\n  return (\n    <div className=\"graph-controls\">\n      <Button\n        className=\"center-graph\"\n        onClick={centerGraph}\n        variant=\"contained\"\n        style={{ backgroundColor: '#ededed', color: 'gray' }}\n      >\n        <HomeIcon fontSize=\"small\" />\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Header from 'components/Header';\nimport Toolbar from 'components/Toolbar';\nimport Graph, { ImperativeCanvasRef } from 'components/Graph';\nimport Sidebar from 'components/Sidebar';\nimport ExprList from 'components/ExprList';\nimport NewExpression from 'components/NewExpression';\nimport Keypad from 'components/Keypad';\nimport GraphControls from 'components/GraphControls';\n/* DEPRECATED: Graph options\nimport GraphOptions from 'components/GraphOptions';\n*/\n\nimport useWindowSize from 'hooks/useWindowSize';\nimport useDraggablePosition from 'hooks/useDraggablePosition';\nimport useExprs from 'hooks/useExprs';\n\n/* DEPRECATED: Graph options\nimport { DrawOptions } from 'utils/draw';\n*/\n\nimport 'styles/App.css';\nimport 'react-resizable/css/styles.css';\n\n// The MathQuill library is loaded through <script> tags, so we declare\n// the exposed MathQuill object here so that TypeScript is happy\nconst { MQ } = window;\n\n// These aren't used to actually set the header/keypad height;\n// they are only symbolic constants.\n// The actual header/keypad height is controlled in CSS (App.css and Keypad.css)\nconst headerHeight = 46;\nconst keypadHeight = 150;\n\nfunction App() {\n  const {\n    exprs, // state array containing information for all current expressions\n    focusedID, // ID of the expression that currently has focus\n    loadExprs, // import an array of expressions\n    reorderExprs, // swap two expressions in the array (affects ordering in expression list)\n    newExpr, // create a new expression and add it to the expression list\n    insertTex, // insert a TeX string into an expression\n    animateExpr, // start the animation of an expression\n    generateCallbacks, // create callbacks for an expression\n  } = useExprs();\n  const windowSize = useWindowSize();\n  // reference to a canvas interface that can interact with the graph canvas\n  // (interface defined in ImperativeCanvasRef)\n  const canvasRef = React.createRef<ImperativeCanvasRef>();\n  // x-coordinate of the sidebar and callback for sidebar dragging (to expand/shrink the sidebar)\n  const {\n    position: sidebarPosition,\n    setPosition: setSidebarPosition,\n    onDragStart: onSidebarDragStart,\n  } = useDraggablePosition(\n    { x: 350, y: 0 },\n    { x: 300, y: -Infinity }, // minimum\n    { x: windowSize.width * 9 / 10, y: Infinity }, // maximum\n  );\n  // flags controlling the visibility of the bottom keyboard\n  const [keypadVisible, setKeypadVisible] = React.useState(false);\n\n  // MathQuill library initialization\n  React.useEffect(() => {\n    MQ.config({\n      autoCommands: 'pi theta sqrt sum times cdot', // command is automatically replaced with symbol\n      autoOperatorNames: 'sin cos tan csc sec cot arcsin arccos arctan log ln '\n        + 'det eigenvalues eigenvectors cross proj comp norm inv', // operators formatted as functions (non-italicized)\n    });\n  }, []);\n\n  // Calculate the height of the sidebar from the window size, the header size, and whether or not\n  // the keypad is visible\n  const sidebarHeight = windowSize.height - headerHeight - (keypadVisible ? keypadHeight : 0);\n\n  // Generate a list of expressions from the `exprs` state array that should be drawn on the graph.\n  // (expressions that have been evaluated to a value\n  // and have not been toggled as invisible by the user)\n  const drawableExprs = exprs.filter(\n    (exprData) => exprData.visible && exprData.evaluatedValue !== null,\n  );\n\n  // Insert a TeX expression at the cursor into the expression that currently has focus.\n  const insertTexInFocused = (tex: string) => insertTex(focusedID, tex);\n\n  /* DEPRECATED: Graph options\n  const graphOptionsButtons = (\n    <GraphOptions\n      currentOptions={currentGraphOptions}\n      centerGraph={centerGraph}\n      setGraphOptions={setGraphOptions}\n    />\n  );\n\n  const currentGraphOptions = canvasRef.current?.currentOptions;\n\n  // Adjust draw options on the graph (color, toggle coordinates, toggle minor lines)\n  const setGraphOptions = (options: Partial<DrawOptions>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.setOptions(options);\n  };\n  */\n\n  // Center the graph at the origin.\n  const centerGraph = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.centerGraph();\n  };\n\n  // Prompt the user to download the currently visible graph as a PNG.\n  const exportGraphPNG = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    canvas.exportGraphPNG();\n  };\n\n  // Serialize the `exprs` state array as JSON and encode it in Base64.\n  const exportExprs = () => {\n    // MathJS evaluations don't entirely copy when stringified,\n    // so we remove them in the export to save characters in the encoding\n    // and re-evaluate on import\n    const exprsWithoutEval = exprs.map((exprData) => ({ ...exprData, evaluatedValue: null }));\n    return btoa(JSON.stringify(exprsWithoutEval));\n  };\n  // Decode an encoded `exprs` state array and load it into the current `exprs` state\n  const importExprs = (exprsBase64: string) => {\n    const exprsObject = JSON.parse(atob(exprsBase64));\n    // loadExprs will re-evaluate the stripped evaluations\n    loadExprs(exprsObject);\n  };\n\n  const setSidebarWidth = (width: number) => setSidebarPosition({ x: width, y: 0 });\n  const sidebarHidden = sidebarPosition.x <= 0;\n\n  return (\n    <>\n      <Header\n        exportExprs={exportExprs}\n        importExprs={importExprs}\n        exportGraphPNG={exportGraphPNG}\n      />\n      <div id=\"app\">\n        <Sidebar\n          width={sidebarPosition.x}\n          setWidth={setSidebarWidth}\n          height={sidebarHeight}\n          onResizerClick={onSidebarDragStart}\n          header={<Toolbar newExpr={newExpr} hideSidebar={() => setSidebarWidth(0)} />}\n        >\n          <ExprList\n            exprs={exprs}\n            focusedID={focusedID}\n            reorderExprs={reorderExprs}\n            generateCallbacks={generateCallbacks}\n          />\n          <NewExpression onClick={() => newExpr('math')} />\n        </Sidebar>\n        <Graph\n          ref={canvasRef}\n          width={windowSize.width - sidebarPosition.x}\n          height={sidebarHeight}\n          exprs={drawableExprs}\n          animateExpr={animateExpr}\n        />\n        <GraphControls centerGraph={centerGraph} />\n        {!sidebarHidden && (\n          <Keypad\n            keypadVisible={keypadVisible}\n            setKeypadVisible={setKeypadVisible}\n            insertTex={insertTexInFocused}\n          />\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\n/**\n * Get the current size of the window.\n */\nexport default function useWindowSize() {\n  const [size, setSize] = React.useState({ width: window.innerWidth, height: window.innerHeight });\n  React.useEffect(() => {\n    function onResize() {\n      setSize({ width: window.innerWidth, height: window.innerHeight });\n    }\n    window.addEventListener('resize', onResize);\n    return () => { window.removeEventListener('resize', onResize); };\n  }, []);\n  return size;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport 'styles/index.css';\nimport App from './components/App';\n// import reportWebVitals from './reportWebVitals';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#15418C',\n    },\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}